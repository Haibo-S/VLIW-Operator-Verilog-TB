/* Generated by Yosys 0.42+12 (git sha1 a55e8594b, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "adder16_wrapper.v:3.1-19.10" *)
module adder16_wrapper(clk, X, Y, R);
  (* src = "adder16_wrapper.v:7.24-7.25" *)
  output [16:0] R;
  wire [16:0] R;
  (* src = "adder16_wrapper.v:5.24-5.25" *)
  input [15:0] X;
  wire [15:0] X;
  (* src = "adder16_wrapper.v:6.24-6.25" *)
  input [15:0] Y;
  wire [15:0] Y;
  (* src = "adder16_wrapper.v:4.24-4.27" *)
  input clk;
  wire clk;
  (* blackbox = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "adder16_wrapper.v:12.14-17.4" *)
  top_module dut (
    .R(R),
    .X(X),
    .Y(Y),
    .clk(clk)
  );
endmodule

module top_module(clk, X, Y, R);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  output [16:0] R;
  wire [16:0] R;
  input [15:0] X;
  wire [15:0] X;
  input [15:0] Y;
  wire [15:0] Y;
  input clk;
  wire clk;
  wire [16:0] x_int;
  wire [16:0] y_int;
  assign _044_ = ~(Y[13] ^ X[13]);
  assign _045_ = ~(Y[12] & X[12]);
  assign _046_ = ~(Y[12] ^ X[12]);
  assign _047_ = Y[11] & X[11];
  assign _048_ = Y[11] ^ X[11];
  assign _049_ = ~(Y[10] & X[10]);
  assign _050_ = _048_ & ~(_049_);
  assign _051_ = _050_ | _047_;
  assign _052_ = ~(Y[10] ^ X[10]);
  assign _053_ = _048_ & ~(_052_);
  assign _054_ = ~(Y[9] & X[9]);
  assign _055_ = ~(Y[9] ^ X[9]);
  assign _056_ = ~(Y[8] & X[8]);
  assign _057_ = ~(_056_ | _055_);
  assign _058_ = _054_ & ~(_057_);
  assign _059_ = _053_ & ~(_058_);
  assign _060_ = _059_ | _051_;
  assign _061_ = ~(Y[8] ^ X[8]);
  assign _062_ = _061_ | _055_;
  assign _063_ = _053_ & ~(_062_);
  assign _064_ = ~(Y[7] & X[7]);
  assign _065_ = Y[7] ^ X[7];
  assign _066_ = ~(Y[6] & X[6]);
  assign _067_ = _065_ & ~(_066_);
  assign _068_ = _064_ & ~(_067_);
  assign _069_ = ~(Y[6] ^ X[6]);
  assign _070_ = _065_ & ~(_069_);
  assign _071_ = ~(Y[5] & X[5]);
  assign _072_ = Y[5] ^ X[5];
  assign _073_ = ~(Y[4] & X[4]);
  assign _074_ = _072_ & ~(_073_);
  assign _075_ = _071_ & ~(_074_);
  assign _076_ = _070_ & ~(_075_);
  assign _077_ = _068_ & ~(_076_);
  assign _078_ = ~(Y[4] ^ X[4]);
  assign _079_ = _078_ | ~(_072_);
  assign _080_ = _070_ & ~(_079_);
  assign _081_ = ~(Y[3] & X[3]);
  assign _082_ = Y[3] ^ X[3];
  assign _083_ = ~(Y[2] & X[2]);
  assign _084_ = _082_ & ~(_083_);
  assign _085_ = _081_ & ~(_084_);
  assign _086_ = ~(Y[2] ^ X[2]);
  assign _087_ = _082_ & ~(_086_);
  assign _088_ = ~(Y[1] & X[1]);
  assign _089_ = Y[1] ^ X[1];
  assign _090_ = ~(Y[0] & X[0]);
  assign _091_ = _089_ & ~(_090_);
  assign _092_ = _088_ & ~(_091_);
  assign _093_ = _087_ & ~(_092_);
  assign _000_ = _085_ & ~(_093_);
  assign _001_ = _080_ & ~(_000_);
  assign _002_ = _077_ & ~(_001_);
  assign _003_ = _063_ & ~(_002_);
  assign _004_ = ~(_003_ | _060_);
  assign _005_ = ~(_004_ | _046_);
  assign _006_ = _045_ & ~(_005_);
  assign R[13] = _006_ ^ _044_;
  assign _007_ = ~(Y[14] ^ X[14]);
  assign _008_ = Y[13] & X[13];
  assign _009_ = ~(_045_ | _044_);
  assign _010_ = ~(_009_ | _008_);
  assign _011_ = _046_ | _044_;
  assign _012_ = ~(_011_ | _004_);
  assign _013_ = _010_ & ~(_012_);
  assign R[14] = _013_ ^ _007_;
  assign _014_ = ~(Y[15] ^ X[15]);
  assign _015_ = ~(Y[14] & X[14]);
  assign _016_ = ~(_013_ | _007_);
  assign _017_ = _015_ & ~(_016_);
  assign R[15] = _017_ ^ _014_;
  assign _018_ = ~(Y[15] & X[15]);
  assign _019_ = ~(_015_ | _014_);
  assign _020_ = _018_ & ~(_019_);
  assign _021_ = _014_ | _007_;
  assign _022_ = ~(_021_ | _010_);
  assign _023_ = _020_ & ~(_022_);
  assign _024_ = _021_ | _011_;
  assign _025_ = _060_ & ~(_024_);
  assign _026_ = _023_ & ~(_025_);
  assign _027_ = _024_ | ~(_063_);
  assign _028_ = ~(_027_ | _002_);
  assign _029_ = _026_ & ~(_028_);
  assign R[16] = _029_ ^ _014_;
  assign R[0] = Y[0] ^ X[0];
  assign R[1] = ~(_090_ ^ _089_);
  assign R[2] = _092_ ^ _086_;
  assign _030_ = ~(_092_ | _086_);
  assign _031_ = _030_ | ~(_083_);
  assign R[3] = _031_ ^ _082_;
  assign R[4] = _000_ ^ _078_;
  assign _032_ = ~(_000_ | _078_);
  assign _033_ = _032_ | ~(_073_);
  assign R[5] = _033_ ^ _072_;
  assign _034_ = ~(_000_ | _079_);
  assign _035_ = _075_ & ~(_034_);
  assign R[6] = _035_ ^ _069_;
  assign _036_ = ~(_035_ | _069_);
  assign _037_ = _036_ | ~(_066_);
  assign R[7] = _037_ ^ _065_;
  assign R[8] = _002_ ^ _061_;
  assign _038_ = ~(_002_ | _061_);
  assign _039_ = _056_ & ~(_038_);
  assign R[9] = _039_ ^ _055_;
  assign _040_ = ~(_002_ | _062_);
  assign _041_ = _058_ & ~(_040_);
  assign R[10] = _041_ ^ _052_;
  assign _042_ = ~(_041_ | _052_);
  assign _043_ = _042_ | ~(_049_);
  assign R[11] = _043_ ^ _048_;
  assign R[12] = _004_ ^ _046_;
  assign x_int = { X[15], X };
  assign y_int = { Y[15], Y };
endmodule
