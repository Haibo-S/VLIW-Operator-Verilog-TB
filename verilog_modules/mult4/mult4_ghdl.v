/* Generated by Yosys 0.42+12 (git sha1 a55e8594b, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "mult4_wrapper.v:3.1-19.10" *)
module mult4_wrapper(clk, X, Y, R);
  (* src = "mult4_wrapper.v:7.23-7.24" *)
  output [8:0] R;
  wire [8:0] R;
  (* src = "mult4_wrapper.v:5.23-5.24" *)
  input [3:0] X;
  wire [3:0] X;
  (* src = "mult4_wrapper.v:6.23-6.24" *)
  input [3:0] Y;
  wire [3:0] Y;
  (* src = "mult4_wrapper.v:4.24-4.27" *)
  input clk;
  wire clk;
  (* blackbox = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "mult4_wrapper.v:12.14-17.4" *)
  top_module dut (
    .R(R[7:0]),
    .X(X),
    .Y(Y),
    .clk(clk)
  );
  assign R[8] = 1'h0;
endmodule

module top_module(clk, X, Y, R);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  output [7:0] R;
  wire [7:0] R;
  input [3:0] X;
  wire [3:0] X;
  input [3:0] Y;
  wire [3:0] Y;
  input clk;
  wire clk;
  wire [7:0] rr;
  wire [3:0] xx;
  wire [3:0] yy;
  assign R[0] = Y[0] & X[0];
  assign _001_ = ~(Y[0] & X[1]);
  assign _002_ = ~(Y[1] & X[0]);
  assign R[1] = _002_ ^ _001_;
  assign _003_ = ~(Y[0] & X[2]);
  assign _004_ = ~(Y[1] & X[1]);
  assign _005_ = _004_ ^ _003_;
  assign _006_ = ~(Y[2] & X[0]);
  assign _007_ = _006_ ^ _005_;
  assign _008_ = _002_ | _001_;
  assign R[2] = _008_ ^ _007_;
  assign _009_ = Y[0] & X[3];
  assign _010_ = _009_ ^ Y[3];
  assign _011_ = ~(Y[1] & X[2]);
  assign _012_ = _011_ ^ _010_;
  assign _013_ = _004_ | _003_;
  assign _014_ = _005_ & ~(_006_);
  assign _015_ = _013_ & ~(_014_);
  assign _016_ = _015_ ^ _012_;
  assign _017_ = Y[2] & X[1];
  assign _018_ = ~_017_;
  assign _019_ = _018_ ^ _016_;
  assign _020_ = _008_ | _007_;
  assign _021_ = _020_ ^ _019_;
  assign _022_ = Y[3] & ~(X[0]);
  assign R[3] = _022_ ^ _021_;
  assign _023_ = Y[1] & X[3];
  assign _024_ = ~(_023_ ^ _009_);
  assign _025_ = Y[2] & X[3];
  assign _026_ = _025_ ^ _024_;
  assign _027_ = ~(_023_ & _009_);
  assign _028_ = Y[2] & X[2];
  assign _029_ = _028_ & ~(_024_);
  assign _030_ = _027_ & ~(_029_);
  assign _031_ = _030_ ^ _026_;
  assign _032_ = Y[3] & ~(X[2]);
  assign _033_ = _032_ ^ _031_;
  assign _034_ = ~(_028_ ^ _024_);
  assign _035_ = ~(_009_ & Y[3]);
  assign _036_ = _010_ & ~(_011_);
  assign _037_ = _035_ & ~(_036_);
  assign _038_ = _037_ | ~(_034_);
  assign _039_ = Y[3] & ~(X[1]);
  assign _040_ = _037_ ^ _034_;
  assign _041_ = _039_ & ~(_040_);
  assign _042_ = _038_ & ~(_041_);
  assign _043_ = _042_ ^ _033_;
  assign _044_ = _040_ ^ _039_;
  assign _045_ = _015_ | _012_;
  assign _046_ = _016_ & ~(_018_);
  assign _047_ = _045_ & ~(_046_);
  assign _048_ = _047_ | _044_;
  assign _049_ = _048_ ^ _043_;
  assign _050_ = ~(_047_ ^ _044_);
  assign _051_ = _020_ | _019_;
  assign _052_ = _022_ & _021_;
  assign _053_ = _051_ & ~(_052_);
  assign _054_ = _053_ | _050_;
  assign R[5] = ~(_054_ ^ _049_);
  assign _055_ = _025_ & ~(_024_);
  assign _056_ = _027_ & ~(_055_);
  assign _057_ = ~(_056_ ^ _026_);
  assign _058_ = Y[3] & ~(X[3]);
  assign _059_ = _058_ ^ _057_;
  assign _060_ = ~_059_;
  assign _061_ = _030_ | _026_;
  assign _062_ = _032_ & _031_;
  assign _063_ = _061_ & ~(_062_);
  assign _064_ = _063_ ^ _060_;
  assign _065_ = _042_ | ~(_033_);
  assign _066_ = _065_ ^ _064_;
  assign _067_ = _048_ | _043_;
  assign _068_ = _049_ & ~(_054_);
  assign _069_ = _067_ & ~(_068_);
  assign R[6] = ~(_069_ ^ _066_);
  assign _070_ = _056_ | _026_;
  assign _071_ = _058_ & ~(_057_);
  assign _072_ = _070_ & ~(_071_);
  assign _073_ = _072_ ^ _060_;
  assign _074_ = _060_ & ~(_063_);
  assign _075_ = _074_ ^ _073_;
  assign _076_ = _065_ | _064_;
  assign _077_ = _066_ & ~(_069_);
  assign _000_ = _076_ & ~(_077_);
  assign R[7] = _000_ ^ _075_;
  assign R[4] = _053_ ^ _050_;
  assign rr = R;
  assign xx = X;
  assign yy = Y;
endmodule
