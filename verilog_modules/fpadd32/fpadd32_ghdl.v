/* Generated by Yosys 0.42+12 (git sha1 a55e8594b, clang++ 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* top =  1  *)
(* src = "fpadd32_wrapper.v:3.1-19.10" *)
module fpadd32_wrapper(clk, X, Y, R);
  (* src = "fpadd32_wrapper.v:7.24-7.25" *)
  output [33:0] R;
  wire [33:0] R;
  (* src = "fpadd32_wrapper.v:5.24-5.25" *)
  input [33:0] X;
  wire [33:0] X;
  (* src = "fpadd32_wrapper.v:6.24-6.25" *)
  input [33:0] Y;
  wire [33:0] Y;
  (* src = "fpadd32_wrapper.v:4.24-4.27" *)
  input clk;
  wire clk;
  (* blackbox = 32'd1 *)
  (* module_not_derived = 32'd1 *)
  (* src = "fpadd32_wrapper.v:12.14-17.4" *)
  top_module dut (
    .R(R),
    .X(X),
    .Y(Y),
    .clk(clk)
  );
endmodule

module intadder_27_freq500_uid6(clk, x, y, cin, r);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:268.22-268.23" *)
  wire [26:0] _162_;
  input cin;
  wire cin;
  wire cin_1;
  reg cin_1_d1;
  input clk;
  wire clk;
  output [26:0] r;
  wire [26:0] r;
  wire [21:0] r_1;
  wire [6:0] s_1;
  input [26:0] x;
  wire [26:0] x;
  wire [27:0] x_1;
  reg [26:0] x_1_d1;
  reg [26:0] x_1_d2;
  reg [26:0] x_1_d3;
  reg [26:0] x_1_d4;
  input [26:0] y;
  wire [26:0] y;
  wire [27:0] y_1;
  reg [26:0] y_1_d1;
  reg [23:0] y_1_d2;
  assign _149_ = ~(y_1_d2[0] ^ x_1_d4[0]);
  assign r[0] = ~(_149_ ^ cin_1_d1);
  assign _150_ = y_1_d2[1] ^ x_1_d4[1];
  assign _151_ = ~(y_1_d2[0] & x_1_d4[0]);
  assign _152_ = cin_1_d1 & ~(_149_);
  assign _153_ = _151_ & ~(_152_);
  assign r[1] = ~(_153_ ^ _150_);
  assign _154_ = ~(y_1_d2[2] ^ x_1_d4[2]);
  assign _155_ = y_1_d2[1] & x_1_d4[1];
  assign _156_ = _150_ & ~(_153_);
  assign _157_ = _156_ | _155_;
  assign r[2] = ~(_157_ ^ _154_);
  assign _158_ = ~(y_1_d2[3] ^ x_1_d4[3]);
  assign _159_ = ~(y_1_d2[2] & x_1_d4[2]);
  assign _160_ = _157_ & ~(_154_);
  assign _161_ = _159_ & ~(_160_);
  assign r[3] = _161_ ^ _158_;
  assign _000_ = ~(y_1_d2[4] ^ x_1_d4[4]);
  assign _001_ = y_1_d2[3] & x_1_d4[3];
  assign _002_ = ~(_159_ | _158_);
  assign _003_ = _002_ | _001_;
  assign _004_ = _158_ | _154_;
  assign _005_ = _157_ & ~(_004_);
  assign _006_ = _005_ | _003_;
  assign r[4] = ~(_006_ ^ _000_);
  assign _007_ = ~(y_1_d2[5] ^ x_1_d4[5]);
  assign _008_ = ~(y_1_d2[4] & x_1_d4[4]);
  assign _009_ = _006_ & ~(_000_);
  assign _010_ = _008_ & ~(_009_);
  assign r[5] = _010_ ^ _007_;
  assign _011_ = ~(y_1_d2[6] ^ x_1_d4[6]);
  assign _012_ = y_1_d2[5] & x_1_d4[5];
  assign _013_ = ~(_008_ | _007_);
  assign _014_ = _013_ | _012_;
  assign _015_ = _007_ | _000_;
  assign _016_ = _015_ | ~(_006_);
  assign _017_ = _016_ & ~(_014_);
  assign r[6] = _017_ ^ _011_;
  assign _018_ = ~(y_1_d2[7] ^ x_1_d4[7]);
  assign _019_ = ~(y_1_d2[6] & x_1_d4[6]);
  assign _020_ = ~(_017_ | _011_);
  assign _021_ = _019_ & ~(_020_);
  assign r[7] = _021_ ^ _018_;
  assign _022_ = ~(y_1_d2[8] ^ x_1_d4[8]);
  assign _023_ = y_1_d2[7] & x_1_d4[7];
  assign _024_ = ~(_019_ | _018_);
  assign _025_ = _024_ | _023_;
  assign _026_ = _018_ | _011_;
  assign _027_ = _014_ & ~(_026_);
  assign _028_ = _027_ | _025_;
  assign _029_ = _026_ | _015_;
  assign _030_ = _006_ & ~(_029_);
  assign _031_ = _030_ | _028_;
  assign r[8] = ~(_031_ ^ _022_);
  assign _032_ = y_1_d2[9] ^ x_1_d4[9];
  assign _033_ = ~(y_1_d2[8] & x_1_d4[8]);
  assign _034_ = _031_ & ~(_022_);
  assign _035_ = _034_ | ~(_033_);
  assign r[9] = _035_ ^ _032_;
  assign _036_ = ~(y_1_d2[10] ^ x_1_d4[10]);
  assign _037_ = y_1_d2[9] & x_1_d4[9];
  assign _038_ = _032_ & ~(_033_);
  assign _039_ = _038_ | _037_;
  assign _040_ = _022_ | ~(_032_);
  assign _041_ = _040_ | ~(_031_);
  assign _042_ = _041_ & ~(_039_);
  assign r[10] = _042_ ^ _036_;
  assign _043_ = ~(y_1_d2[11] ^ x_1_d4[11]);
  assign _044_ = ~(y_1_d2[10] & x_1_d4[10]);
  assign _045_ = ~(_042_ | _036_);
  assign _046_ = _044_ & ~(_045_);
  assign r[11] = _046_ ^ _043_;
  assign _047_ = ~(y_1_d2[12] ^ x_1_d4[12]);
  assign _048_ = y_1_d2[11] & x_1_d4[11];
  assign _049_ = ~(_044_ | _043_);
  assign _050_ = _049_ | _048_;
  assign _051_ = _043_ | _036_;
  assign _052_ = _039_ & ~(_051_);
  assign _053_ = _052_ | _050_;
  assign _054_ = _051_ | _040_;
  assign _055_ = _031_ & ~(_054_);
  assign _056_ = ~(_055_ | _053_);
  assign r[12] = _056_ ^ _047_;
  assign _057_ = y_1_d2[13] ^ x_1_d4[13];
  assign _058_ = ~(y_1_d2[12] & x_1_d4[12]);
  assign _059_ = ~(_056_ | _047_);
  assign _060_ = _059_ | ~(_058_);
  assign r[13] = _060_ ^ _057_;
  assign _061_ = ~(y_1_d2[14] ^ x_1_d4[14]);
  assign _062_ = y_1_d2[13] & x_1_d4[13];
  assign _063_ = _057_ & ~(_058_);
  assign _064_ = _063_ | _062_;
  assign _065_ = _047_ | ~(_057_);
  assign _066_ = _065_ | _056_;
  assign _067_ = _066_ & ~(_064_);
  assign r[14] = _067_ ^ _061_;
  assign _068_ = ~(y_1_d2[15] ^ x_1_d4[15]);
  assign _069_ = ~(y_1_d2[14] & x_1_d4[14]);
  assign _070_ = ~(_067_ | _061_);
  assign _071_ = _069_ & ~(_070_);
  assign r[15] = _071_ ^ _068_;
  assign _072_ = ~(y_1_d2[16] ^ x_1_d4[16]);
  assign _073_ = y_1_d2[15] & x_1_d4[15];
  assign _074_ = ~(_069_ | _068_);
  assign _075_ = _074_ | _073_;
  assign _076_ = _068_ | _061_;
  assign _077_ = _064_ & ~(_076_);
  assign _078_ = _077_ | _075_;
  assign _079_ = _076_ | _065_;
  assign _080_ = _053_ & ~(_079_);
  assign _081_ = _080_ | _078_;
  assign _082_ = _079_ | _054_;
  assign _083_ = _031_ & ~(_082_);
  assign _084_ = _083_ | _081_;
  assign r[16] = ~(_084_ ^ _072_);
  assign _085_ = ~(y_1_d2[17] ^ x_1_d4[17]);
  assign _086_ = ~(y_1_d2[16] & x_1_d4[16]);
  assign _087_ = _084_ & ~(_072_);
  assign _088_ = _086_ & ~(_087_);
  assign r[17] = _088_ ^ _085_;
  assign _089_ = ~(y_1_d2[18] ^ x_1_d4[18]);
  assign _090_ = y_1_d2[17] & x_1_d4[17];
  assign _091_ = ~(_086_ | _085_);
  assign _092_ = ~(_091_ | _090_);
  assign _093_ = _085_ | _072_;
  assign _094_ = _084_ & ~(_093_);
  assign _095_ = _092_ & ~(_094_);
  assign r[18] = _095_ ^ _089_;
  assign _096_ = ~(y_1_d2[19] ^ x_1_d4[19]);
  assign _097_ = ~(y_1_d2[18] & x_1_d4[18]);
  assign _098_ = ~(_095_ | _089_);
  assign _099_ = _097_ & ~(_098_);
  assign r[19] = _099_ ^ _096_;
  assign _100_ = ~(y_1_d2[20] ^ x_1_d4[20]);
  assign _101_ = y_1_d2[19] & x_1_d4[19];
  assign _102_ = ~(_097_ | _096_);
  assign _103_ = _102_ | _101_;
  assign _104_ = _096_ | _089_;
  assign _105_ = ~(_104_ | _092_);
  assign _106_ = _105_ | _103_;
  assign _107_ = _104_ | _093_;
  assign _108_ = _084_ & ~(_107_);
  assign _109_ = ~(_108_ | _106_);
  assign r[20] = _109_ ^ _100_;
  assign _110_ = ~(y_1_d2[21] ^ x_1_d4[21]);
  assign _111_ = ~(y_1_d2[20] & x_1_d4[20]);
  assign _112_ = ~(_109_ | _100_);
  assign _113_ = _111_ & ~(_112_);
  assign r[21] = _113_ ^ _110_;
  assign _114_ = ~(y_1_d2[22] ^ x_1_d4[22]);
  assign _115_ = y_1_d2[21] & x_1_d4[21];
  assign _116_ = ~(_111_ | _110_);
  assign _117_ = ~(_116_ | _115_);
  assign _118_ = _110_ | _100_;
  assign _119_ = ~(_118_ | _109_);
  assign _120_ = _117_ & ~(_119_);
  assign r[22] = _120_ ^ _114_;
  assign _121_ = ~(y_1_d2[23] ^ x_1_d4[23]);
  assign _122_ = ~(y_1_d2[22] & x_1_d4[22]);
  assign _123_ = ~(_120_ | _114_);
  assign _124_ = _122_ & ~(_123_);
  assign r[23] = _124_ ^ _121_;
  assign _125_ = ~(_162_[24] ^ x_1_d4[24]);
  assign _126_ = ~(y_1_d2[23] & x_1_d4[23]);
  assign _127_ = ~(_122_ | _121_);
  assign _128_ = _126_ & ~(_127_);
  assign _129_ = _121_ | _114_;
  assign _130_ = ~(_129_ | _117_);
  assign _131_ = _128_ & ~(_130_);
  assign _132_ = _129_ | _118_;
  assign _133_ = _106_ & ~(_132_);
  assign _134_ = _131_ & ~(_133_);
  assign _135_ = _132_ | _107_;
  assign _136_ = _084_ & ~(_135_);
  assign _137_ = _134_ & ~(_136_);
  assign r[24] = _137_ ^ _125_;
  assign _138_ = ~(_162_[25] ^ x_1_d4[25]);
  assign _139_ = ~(_162_[24] & x_1_d4[24]);
  assign _140_ = ~(_137_ | _125_);
  assign _141_ = _139_ & ~(_140_);
  assign r[25] = _141_ ^ _138_;
  assign _142_ = ~(_162_[26] ^ x_1_d4[26]);
  assign _143_ = ~(_162_[25] & x_1_d4[25]);
  assign _144_ = ~(_139_ | _138_);
  assign _145_ = _143_ & ~(_144_);
  assign _146_ = _138_ | _125_;
  assign _147_ = ~(_146_ | _137_);
  assign _148_ = _145_ & ~(_147_);
  assign r[26] = _148_ ^ _142_;
  always @(posedge clk)
    x_1_d2[0] <= x_1_d1[0];
  always @(posedge clk)
    x_1_d2[1] <= x_1_d1[1];
  always @(posedge clk)
    x_1_d2[2] <= x_1_d1[2];
  always @(posedge clk)
    x_1_d2[3] <= x_1_d1[3];
  always @(posedge clk)
    x_1_d2[4] <= x_1_d1[4];
  always @(posedge clk)
    x_1_d2[5] <= x_1_d1[5];
  always @(posedge clk)
    x_1_d2[6] <= x_1_d1[6];
  always @(posedge clk)
    x_1_d2[7] <= x_1_d1[7];
  always @(posedge clk)
    x_1_d2[8] <= x_1_d1[8];
  always @(posedge clk)
    x_1_d2[9] <= x_1_d1[9];
  always @(posedge clk)
    x_1_d2[10] <= x_1_d1[10];
  always @(posedge clk)
    x_1_d2[11] <= x_1_d1[11];
  always @(posedge clk)
    x_1_d2[12] <= x_1_d1[12];
  always @(posedge clk)
    x_1_d2[13] <= x_1_d1[13];
  always @(posedge clk)
    x_1_d2[14] <= x_1_d1[14];
  always @(posedge clk)
    x_1_d2[15] <= x_1_d1[15];
  always @(posedge clk)
    x_1_d2[16] <= x_1_d1[16];
  always @(posedge clk)
    x_1_d2[17] <= x_1_d1[17];
  always @(posedge clk)
    x_1_d2[18] <= x_1_d1[18];
  always @(posedge clk)
    x_1_d2[19] <= x_1_d1[19];
  always @(posedge clk)
    x_1_d2[20] <= x_1_d1[20];
  always @(posedge clk)
    x_1_d2[21] <= x_1_d1[21];
  always @(posedge clk)
    x_1_d2[22] <= x_1_d1[22];
  always @(posedge clk)
    x_1_d2[23] <= x_1_d1[23];
  always @(posedge clk)
    x_1_d2[24] <= x_1_d1[24];
  always @(posedge clk)
    x_1_d2[25] <= x_1_d1[25];
  always @(posedge clk)
    x_1_d2[26] <= x_1_d1[26];
  always @(posedge clk)
    x_1_d1[0] <= x[0];
  always @(posedge clk)
    x_1_d1[1] <= x[1];
  always @(posedge clk)
    x_1_d1[2] <= x[2];
  always @(posedge clk)
    x_1_d1[3] <= x[3];
  always @(posedge clk)
    x_1_d1[4] <= x[4];
  always @(posedge clk)
    x_1_d1[5] <= x[5];
  always @(posedge clk)
    x_1_d1[6] <= x[6];
  always @(posedge clk)
    x_1_d1[7] <= x[7];
  always @(posedge clk)
    x_1_d1[8] <= x[8];
  always @(posedge clk)
    x_1_d1[9] <= x[9];
  always @(posedge clk)
    x_1_d1[10] <= x[10];
  always @(posedge clk)
    x_1_d1[11] <= x[11];
  always @(posedge clk)
    x_1_d1[12] <= x[12];
  always @(posedge clk)
    x_1_d1[13] <= x[13];
  always @(posedge clk)
    x_1_d1[14] <= x[14];
  always @(posedge clk)
    x_1_d1[15] <= x[15];
  always @(posedge clk)
    x_1_d1[16] <= x[16];
  always @(posedge clk)
    x_1_d1[17] <= x[17];
  always @(posedge clk)
    x_1_d1[18] <= x[18];
  always @(posedge clk)
    x_1_d1[19] <= x[19];
  always @(posedge clk)
    x_1_d1[20] <= x[20];
  always @(posedge clk)
    x_1_d1[21] <= x[21];
  always @(posedge clk)
    x_1_d1[22] <= x[22];
  always @(posedge clk)
    x_1_d1[23] <= x[23];
  always @(posedge clk)
    x_1_d1[24] <= x[24];
  always @(posedge clk)
    x_1_d1[25] <= x[25];
  always @(posedge clk)
    x_1_d1[26] <= x[26];
  always @(posedge clk)
    cin_1_d1 <= cin;
  always @(posedge clk)
    y_1_d1[0] <= y[0];
  always @(posedge clk)
    y_1_d1[1] <= y[1];
  always @(posedge clk)
    y_1_d1[2] <= y[2];
  always @(posedge clk)
    y_1_d1[3] <= y[3];
  always @(posedge clk)
    y_1_d1[4] <= y[4];
  always @(posedge clk)
    y_1_d1[5] <= y[5];
  always @(posedge clk)
    y_1_d1[6] <= y[6];
  always @(posedge clk)
    y_1_d1[7] <= y[7];
  always @(posedge clk)
    y_1_d1[8] <= y[8];
  always @(posedge clk)
    y_1_d1[9] <= y[9];
  always @(posedge clk)
    y_1_d1[10] <= y[10];
  always @(posedge clk)
    y_1_d1[11] <= y[11];
  always @(posedge clk)
    y_1_d1[12] <= y[12];
  always @(posedge clk)
    y_1_d1[13] <= y[13];
  always @(posedge clk)
    y_1_d1[14] <= y[14];
  always @(posedge clk)
    y_1_d1[15] <= y[15];
  always @(posedge clk)
    y_1_d1[16] <= y[16];
  always @(posedge clk)
    y_1_d1[17] <= y[17];
  always @(posedge clk)
    y_1_d1[18] <= y[18];
  always @(posedge clk)
    y_1_d1[19] <= y[19];
  always @(posedge clk)
    y_1_d1[20] <= y[20];
  always @(posedge clk)
    y_1_d1[21] <= y[21];
  always @(posedge clk)
    y_1_d1[22] <= y[22];
  always @(posedge clk)
    y_1_d1[23] <= y[23];
  always @(posedge clk)
    y_1_d1[24] <= y[24];
  always @(posedge clk)
    y_1_d1[25] <= y[25];
  always @(posedge clk)
    y_1_d1[26] <= y[26];
  always @(posedge clk)
    y_1_d2[0] <= y_1_d1[0];
  always @(posedge clk)
    y_1_d2[1] <= y_1_d1[1];
  always @(posedge clk)
    y_1_d2[2] <= y_1_d1[2];
  always @(posedge clk)
    y_1_d2[3] <= y_1_d1[3];
  always @(posedge clk)
    y_1_d2[4] <= y_1_d1[4];
  always @(posedge clk)
    y_1_d2[5] <= y_1_d1[5];
  always @(posedge clk)
    y_1_d2[6] <= y_1_d1[6];
  always @(posedge clk)
    y_1_d2[7] <= y_1_d1[7];
  always @(posedge clk)
    y_1_d2[8] <= y_1_d1[8];
  always @(posedge clk)
    y_1_d2[9] <= y_1_d1[9];
  always @(posedge clk)
    y_1_d2[10] <= y_1_d1[10];
  always @(posedge clk)
    y_1_d2[11] <= y_1_d1[11];
  always @(posedge clk)
    y_1_d2[12] <= y_1_d1[12];
  always @(posedge clk)
    y_1_d2[13] <= y_1_d1[13];
  always @(posedge clk)
    y_1_d2[14] <= y_1_d1[14];
  always @(posedge clk)
    y_1_d2[15] <= y_1_d1[15];
  always @(posedge clk)
    y_1_d2[16] <= y_1_d1[16];
  always @(posedge clk)
    y_1_d2[17] <= y_1_d1[17];
  always @(posedge clk)
    y_1_d2[18] <= y_1_d1[18];
  always @(posedge clk)
    y_1_d2[19] <= y_1_d1[19];
  always @(posedge clk)
    y_1_d2[20] <= y_1_d1[20];
  always @(posedge clk)
    y_1_d2[21] <= y_1_d1[21];
  always @(posedge clk)
    y_1_d2[22] <= y_1_d1[22];
  always @(posedge clk)
    y_1_d2[23] <= y_1_d1[23];
  reg _458_;
  always @(posedge clk)
    _458_ <= y_1_d1[24];
  assign _162_[24] = _458_;
  reg _459_;
  always @(posedge clk)
    _459_ <= y_1_d1[25];
  assign _162_[25] = _459_;
  reg _460_;
  always @(posedge clk)
    _460_ <= y_1_d1[26];
  assign _162_[26] = _460_;
  always @(posedge clk)
    x_1_d3[0] <= x_1_d2[0];
  always @(posedge clk)
    x_1_d3[1] <= x_1_d2[1];
  always @(posedge clk)
    x_1_d3[2] <= x_1_d2[2];
  always @(posedge clk)
    x_1_d3[3] <= x_1_d2[3];
  always @(posedge clk)
    x_1_d3[4] <= x_1_d2[4];
  always @(posedge clk)
    x_1_d3[5] <= x_1_d2[5];
  always @(posedge clk)
    x_1_d3[6] <= x_1_d2[6];
  always @(posedge clk)
    x_1_d3[7] <= x_1_d2[7];
  always @(posedge clk)
    x_1_d3[8] <= x_1_d2[8];
  always @(posedge clk)
    x_1_d3[9] <= x_1_d2[9];
  always @(posedge clk)
    x_1_d3[10] <= x_1_d2[10];
  always @(posedge clk)
    x_1_d3[11] <= x_1_d2[11];
  always @(posedge clk)
    x_1_d3[12] <= x_1_d2[12];
  always @(posedge clk)
    x_1_d3[13] <= x_1_d2[13];
  always @(posedge clk)
    x_1_d3[14] <= x_1_d2[14];
  always @(posedge clk)
    x_1_d3[15] <= x_1_d2[15];
  always @(posedge clk)
    x_1_d3[16] <= x_1_d2[16];
  always @(posedge clk)
    x_1_d3[17] <= x_1_d2[17];
  always @(posedge clk)
    x_1_d3[18] <= x_1_d2[18];
  always @(posedge clk)
    x_1_d3[19] <= x_1_d2[19];
  always @(posedge clk)
    x_1_d3[20] <= x_1_d2[20];
  always @(posedge clk)
    x_1_d3[21] <= x_1_d2[21];
  always @(posedge clk)
    x_1_d3[22] <= x_1_d2[22];
  always @(posedge clk)
    x_1_d3[23] <= x_1_d2[23];
  always @(posedge clk)
    x_1_d3[24] <= x_1_d2[24];
  always @(posedge clk)
    x_1_d3[25] <= x_1_d2[25];
  always @(posedge clk)
    x_1_d3[26] <= x_1_d2[26];
  always @(posedge clk)
    x_1_d4[0] <= x_1_d3[0];
  always @(posedge clk)
    x_1_d4[1] <= x_1_d3[1];
  always @(posedge clk)
    x_1_d4[2] <= x_1_d3[2];
  always @(posedge clk)
    x_1_d4[3] <= x_1_d3[3];
  always @(posedge clk)
    x_1_d4[4] <= x_1_d3[4];
  always @(posedge clk)
    x_1_d4[5] <= x_1_d3[5];
  always @(posedge clk)
    x_1_d4[6] <= x_1_d3[6];
  always @(posedge clk)
    x_1_d4[7] <= x_1_d3[7];
  always @(posedge clk)
    x_1_d4[8] <= x_1_d3[8];
  always @(posedge clk)
    x_1_d4[9] <= x_1_d3[9];
  always @(posedge clk)
    x_1_d4[10] <= x_1_d3[10];
  always @(posedge clk)
    x_1_d4[11] <= x_1_d3[11];
  always @(posedge clk)
    x_1_d4[12] <= x_1_d3[12];
  always @(posedge clk)
    x_1_d4[13] <= x_1_d3[13];
  always @(posedge clk)
    x_1_d4[14] <= x_1_d3[14];
  always @(posedge clk)
    x_1_d4[15] <= x_1_d3[15];
  always @(posedge clk)
    x_1_d4[16] <= x_1_d3[16];
  always @(posedge clk)
    x_1_d4[17] <= x_1_d3[17];
  always @(posedge clk)
    x_1_d4[18] <= x_1_d3[18];
  always @(posedge clk)
    x_1_d4[19] <= x_1_d3[19];
  always @(posedge clk)
    x_1_d4[20] <= x_1_d3[20];
  always @(posedge clk)
    x_1_d4[21] <= x_1_d3[21];
  always @(posedge clk)
    x_1_d4[22] <= x_1_d3[22];
  always @(posedge clk)
    x_1_d4[23] <= x_1_d3[23];
  always @(posedge clk)
    x_1_d4[24] <= x_1_d3[24];
  always @(posedge clk)
    x_1_d4[25] <= x_1_d3[25];
  always @(posedge clk)
    x_1_d4[26] <= x_1_d3[26];
  assign _162_[23:0] = y_1_d2;
  assign cin_1 = cin;
  assign r_1 = r[21:0];
  assign s_1 = r[6:0];
  assign x_1 = { 1'h0, x };
  assign y_1 = { 1'h0, y };
endmodule

module intadder_34_freq500_uid11(clk, x, y, cin, r);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:268.22-268.23" *)
  wire [33:0] _211_;
  input cin;
  wire cin;
  wire cin_1;
  reg cin_1_d1;
  input clk;
  wire clk;
  output [33:0] r;
  wire [33:0] r;
  wire [33:0] r_1;
  wire [34:0] s_1;
  input [33:0] x;
  wire [33:0] x;
  wire [34:0] x_1;
  reg [33:0] x_1_d1;
  input [33:0] y;
  wire [33:0] y;
  wire [28:0] y_1;
  reg [33:0] y_1_d1;
  reg [33:0] y_1_d2;
  reg [33:0] y_1_d3;
  reg [33:0] y_1_d4;
  reg [33:0] y_1_d5;
  reg [33:0] y_1_d6;
  reg [33:0] y_1_d7;
  reg [25:0] y_1_d8;
  assign _000_ = ~(y_1_d8[0] ^ x_1_d1[0]);
  assign r[0] = ~(_000_ ^ cin_1_d1);
  assign _001_ = y_1_d8[1] ^ x_1_d1[1];
  assign _002_ = ~(y_1_d8[0] & x_1_d1[0]);
  assign _003_ = cin_1_d1 & ~(_000_);
  assign _004_ = _002_ & ~(_003_);
  assign r[1] = ~(_004_ ^ _001_);
  assign _005_ = ~(y_1_d8[2] ^ x_1_d1[2]);
  assign _006_ = y_1_d8[1] & x_1_d1[1];
  assign _007_ = _001_ & ~(_004_);
  assign _008_ = _007_ | _006_;
  assign r[2] = ~(_008_ ^ _005_);
  assign _009_ = ~(y_1_d8[3] ^ x_1_d1[3]);
  assign _010_ = ~(y_1_d8[2] & x_1_d1[2]);
  assign _011_ = _008_ & ~(_005_);
  assign _012_ = _010_ & ~(_011_);
  assign r[3] = _012_ ^ _009_;
  assign _013_ = ~(y_1_d8[4] ^ x_1_d1[4]);
  assign _014_ = y_1_d8[3] & x_1_d1[3];
  assign _015_ = ~(_010_ | _009_);
  assign _016_ = _015_ | _014_;
  assign _017_ = _009_ | _005_;
  assign _018_ = _008_ & ~(_017_);
  assign _019_ = _018_ | _016_;
  assign r[4] = ~(_019_ ^ _013_);
  assign _020_ = ~(y_1_d8[5] ^ x_1_d1[5]);
  assign _021_ = ~(y_1_d8[4] & x_1_d1[4]);
  assign _022_ = _019_ & ~(_013_);
  assign _023_ = _021_ & ~(_022_);
  assign r[5] = _023_ ^ _020_;
  assign _024_ = ~(y_1_d8[6] ^ x_1_d1[6]);
  assign _025_ = y_1_d8[5] & x_1_d1[5];
  assign _026_ = ~(_021_ | _020_);
  assign _027_ = _026_ | _025_;
  assign _028_ = _020_ | _013_;
  assign _029_ = _028_ | ~(_019_);
  assign _030_ = _029_ & ~(_027_);
  assign r[6] = _030_ ^ _024_;
  assign _031_ = ~(y_1_d8[7] ^ x_1_d1[7]);
  assign _032_ = ~(y_1_d8[6] & x_1_d1[6]);
  assign _033_ = ~(_030_ | _024_);
  assign _034_ = _032_ & ~(_033_);
  assign r[7] = _034_ ^ _031_;
  assign _035_ = ~(y_1_d8[8] ^ x_1_d1[8]);
  assign _036_ = y_1_d8[7] & x_1_d1[7];
  assign _037_ = ~(_032_ | _031_);
  assign _038_ = _037_ | _036_;
  assign _039_ = _031_ | _024_;
  assign _040_ = _027_ & ~(_039_);
  assign _041_ = _040_ | _038_;
  assign _042_ = _039_ | _028_;
  assign _043_ = _019_ & ~(_042_);
  assign _044_ = _043_ | _041_;
  assign r[8] = ~(_044_ ^ _035_);
  assign _045_ = y_1_d8[9] ^ x_1_d1[9];
  assign _046_ = ~(y_1_d8[8] & x_1_d1[8]);
  assign _047_ = _044_ & ~(_035_);
  assign _048_ = _047_ | ~(_046_);
  assign r[9] = _048_ ^ _045_;
  assign _049_ = ~(y_1_d8[10] ^ x_1_d1[10]);
  assign _050_ = y_1_d8[9] & x_1_d1[9];
  assign _051_ = _045_ & ~(_046_);
  assign _052_ = _051_ | _050_;
  assign _053_ = _035_ | ~(_045_);
  assign _054_ = _053_ | ~(_044_);
  assign _055_ = _054_ & ~(_052_);
  assign r[10] = _055_ ^ _049_;
  assign _056_ = ~(y_1_d8[11] ^ x_1_d1[11]);
  assign _057_ = ~(y_1_d8[10] & x_1_d1[10]);
  assign _058_ = ~(_055_ | _049_);
  assign _059_ = _057_ & ~(_058_);
  assign r[11] = _059_ ^ _056_;
  assign _060_ = ~(y_1_d8[12] ^ x_1_d1[12]);
  assign _061_ = y_1_d8[11] & x_1_d1[11];
  assign _062_ = ~(_057_ | _056_);
  assign _063_ = _062_ | _061_;
  assign _064_ = _056_ | _049_;
  assign _065_ = _052_ & ~(_064_);
  assign _066_ = _065_ | _063_;
  assign _067_ = _064_ | _053_;
  assign _068_ = _044_ & ~(_067_);
  assign _069_ = ~(_068_ | _066_);
  assign r[12] = _069_ ^ _060_;
  assign _070_ = y_1_d8[13] ^ x_1_d1[13];
  assign _071_ = ~(y_1_d8[12] & x_1_d1[12]);
  assign _072_ = ~(_069_ | _060_);
  assign _073_ = _072_ | ~(_071_);
  assign r[13] = _073_ ^ _070_;
  assign _074_ = ~(y_1_d8[14] ^ x_1_d1[14]);
  assign _075_ = y_1_d8[13] & x_1_d1[13];
  assign _076_ = _070_ & ~(_071_);
  assign _077_ = _076_ | _075_;
  assign _078_ = _060_ | ~(_070_);
  assign _079_ = _078_ | _069_;
  assign _080_ = _079_ & ~(_077_);
  assign r[14] = _080_ ^ _074_;
  assign _081_ = ~(y_1_d8[15] ^ x_1_d1[15]);
  assign _082_ = ~(y_1_d8[14] & x_1_d1[14]);
  assign _083_ = ~(_080_ | _074_);
  assign _084_ = _082_ & ~(_083_);
  assign r[15] = _084_ ^ _081_;
  assign _085_ = ~(y_1_d8[16] ^ x_1_d1[16]);
  assign _086_ = y_1_d8[15] & x_1_d1[15];
  assign _087_ = ~(_082_ | _081_);
  assign _088_ = _087_ | _086_;
  assign _089_ = _081_ | _074_;
  assign _090_ = _077_ & ~(_089_);
  assign _091_ = _090_ | _088_;
  assign _092_ = _089_ | _078_;
  assign _093_ = _066_ & ~(_092_);
  assign _094_ = _093_ | _091_;
  assign _095_ = _092_ | _067_;
  assign _096_ = _044_ & ~(_095_);
  assign _097_ = _096_ | _094_;
  assign r[16] = ~(_097_ ^ _085_);
  assign _098_ = ~(y_1_d8[17] ^ x_1_d1[17]);
  assign _099_ = ~(y_1_d8[16] & x_1_d1[16]);
  assign _100_ = _097_ & ~(_085_);
  assign _101_ = _099_ & ~(_100_);
  assign r[17] = _101_ ^ _098_;
  assign _102_ = ~(y_1_d8[18] ^ x_1_d1[18]);
  assign _103_ = y_1_d8[17] & x_1_d1[17];
  assign _104_ = ~(_099_ | _098_);
  assign _105_ = ~(_104_ | _103_);
  assign _106_ = _098_ | _085_;
  assign _107_ = _097_ & ~(_106_);
  assign _108_ = _105_ & ~(_107_);
  assign r[18] = _108_ ^ _102_;
  assign _109_ = ~(y_1_d8[19] ^ x_1_d1[19]);
  assign _110_ = ~(y_1_d8[18] & x_1_d1[18]);
  assign _111_ = ~(_108_ | _102_);
  assign _112_ = _110_ & ~(_111_);
  assign r[19] = _112_ ^ _109_;
  assign _113_ = ~(y_1_d8[20] ^ x_1_d1[20]);
  assign _114_ = y_1_d8[19] & x_1_d1[19];
  assign _115_ = ~(_110_ | _109_);
  assign _116_ = _115_ | _114_;
  assign _117_ = _109_ | _102_;
  assign _118_ = ~(_117_ | _105_);
  assign _119_ = _118_ | _116_;
  assign _120_ = _117_ | _106_;
  assign _121_ = _097_ & ~(_120_);
  assign _122_ = ~(_121_ | _119_);
  assign r[20] = _122_ ^ _113_;
  assign _123_ = ~(y_1_d8[21] ^ x_1_d1[21]);
  assign _124_ = ~(y_1_d8[20] & x_1_d1[20]);
  assign _125_ = ~(_122_ | _113_);
  assign _126_ = _124_ & ~(_125_);
  assign r[21] = _126_ ^ _123_;
  assign _127_ = ~(y_1_d8[22] ^ x_1_d1[22]);
  assign _128_ = y_1_d8[21] & x_1_d1[21];
  assign _129_ = ~(_124_ | _123_);
  assign _130_ = ~(_129_ | _128_);
  assign _131_ = _123_ | _113_;
  assign _132_ = ~(_131_ | _122_);
  assign _133_ = _130_ & ~(_132_);
  assign r[22] = _133_ ^ _127_;
  assign _134_ = ~(y_1_d8[23] ^ x_1_d1[23]);
  assign _135_ = ~(y_1_d8[22] & x_1_d1[22]);
  assign _136_ = ~(_133_ | _127_);
  assign _137_ = _135_ & ~(_136_);
  assign r[23] = _137_ ^ _134_;
  assign _138_ = ~(y_1_d8[24] ^ x_1_d1[24]);
  assign _139_ = y_1_d8[23] & x_1_d1[23];
  assign _140_ = ~(_135_ | _134_);
  assign _141_ = _140_ | _139_;
  assign _142_ = _134_ | _127_;
  assign _143_ = ~(_142_ | _130_);
  assign _144_ = _143_ | _141_;
  assign _145_ = _142_ | _131_;
  assign _146_ = _119_ & ~(_145_);
  assign _147_ = _146_ | _144_;
  assign _148_ = _145_ | _120_;
  assign _149_ = _097_ & ~(_148_);
  assign _150_ = _149_ | _147_;
  assign r[24] = ~(_150_ ^ _138_);
  assign _151_ = ~(y_1_d8[25] ^ x_1_d1[25]);
  assign _152_ = ~(y_1_d8[24] & x_1_d1[24]);
  assign _153_ = _150_ & ~(_138_);
  assign _154_ = _152_ & ~(_153_);
  assign r[25] = _154_ ^ _151_;
  assign _155_ = ~(_211_[26] ^ x_1_d1[26]);
  assign _156_ = y_1_d8[25] & x_1_d1[25];
  assign _157_ = ~(_152_ | _151_);
  assign _158_ = ~(_157_ | _156_);
  assign _159_ = _151_ | _138_;
  assign _160_ = _150_ & ~(_159_);
  assign _161_ = _158_ & ~(_160_);
  assign r[26] = _161_ ^ _155_;
  assign _162_ = ~(_211_[27] ^ x_1_d1[27]);
  assign _163_ = ~(_211_[26] & x_1_d1[26]);
  assign _164_ = ~(_161_ | _155_);
  assign _165_ = _163_ & ~(_164_);
  assign r[27] = _165_ ^ _162_;
  assign _166_ = ~(_211_[28] ^ x_1_d1[28]);
  assign _167_ = _211_[27] & x_1_d1[27];
  assign _168_ = ~(_163_ | _162_);
  assign _169_ = _168_ | _167_;
  assign _170_ = _162_ | _155_;
  assign _171_ = ~(_170_ | _158_);
  assign _172_ = _171_ | _169_;
  assign _173_ = _170_ | _159_;
  assign _174_ = _150_ & ~(_173_);
  assign _175_ = ~(_174_ | _172_);
  assign r[28] = _175_ ^ _166_;
  assign _176_ = ~(_211_[29] ^ x_1_d1[29]);
  assign _177_ = ~(_211_[28] & x_1_d1[28]);
  assign _178_ = ~(_175_ | _166_);
  assign _179_ = _177_ & ~(_178_);
  assign r[29] = _179_ ^ _176_;
  assign _180_ = ~(_211_[30] ^ x_1_d1[30]);
  assign _181_ = _211_[29] & x_1_d1[29];
  assign _182_ = ~(_177_ | _176_);
  assign _183_ = ~(_182_ | _181_);
  assign _184_ = _176_ | _166_;
  assign _185_ = ~(_184_ | _175_);
  assign _186_ = _183_ & ~(_185_);
  assign r[30] = _186_ ^ _180_;
  assign _187_ = ~(_211_[31] ^ x_1_d1[31]);
  assign _188_ = ~(_211_[30] & x_1_d1[30]);
  assign _189_ = ~(_186_ | _180_);
  assign _190_ = _188_ & ~(_189_);
  assign r[31] = _190_ ^ _187_;
  assign _191_ = ~(_211_[32] ^ x_1_d1[32]);
  assign _192_ = ~(_211_[31] & x_1_d1[31]);
  assign _193_ = ~(_188_ | _187_);
  assign _194_ = _192_ & ~(_193_);
  assign _195_ = _187_ | _180_;
  assign _196_ = ~(_195_ | _183_);
  assign _197_ = _194_ & ~(_196_);
  assign _198_ = _195_ | _184_;
  assign _199_ = _172_ & ~(_198_);
  assign _200_ = _197_ & ~(_199_);
  assign _201_ = _198_ | _173_;
  assign _202_ = _147_ & ~(_201_);
  assign _203_ = _200_ & ~(_202_);
  assign _204_ = _201_ | _148_;
  assign _205_ = _097_ & ~(_204_);
  assign _206_ = _203_ & ~(_205_);
  assign r[32] = _206_ ^ _191_;
  assign _207_ = ~(_211_[33] ^ x_1_d1[33]);
  assign _208_ = ~(_211_[32] & x_1_d1[32]);
  assign _209_ = ~(_206_ | _191_);
  assign _210_ = _208_ & ~(_209_);
  assign r[33] = _210_ ^ _207_;
  always @(posedge clk)
    y_1_d3[0] <= y_1_d2[0];
  always @(posedge clk)
    y_1_d3[1] <= y_1_d2[1];
  always @(posedge clk)
    y_1_d3[2] <= y_1_d2[2];
  always @(posedge clk)
    y_1_d3[3] <= y_1_d2[3];
  always @(posedge clk)
    y_1_d3[4] <= y_1_d2[4];
  always @(posedge clk)
    y_1_d3[5] <= y_1_d2[5];
  always @(posedge clk)
    y_1_d3[6] <= y_1_d2[6];
  always @(posedge clk)
    y_1_d3[7] <= y_1_d2[7];
  always @(posedge clk)
    y_1_d3[8] <= y_1_d2[8];
  always @(posedge clk)
    y_1_d3[9] <= y_1_d2[9];
  always @(posedge clk)
    y_1_d3[10] <= y_1_d2[10];
  always @(posedge clk)
    y_1_d3[11] <= y_1_d2[11];
  always @(posedge clk)
    y_1_d3[12] <= y_1_d2[12];
  always @(posedge clk)
    y_1_d3[13] <= y_1_d2[13];
  always @(posedge clk)
    y_1_d3[14] <= y_1_d2[14];
  always @(posedge clk)
    y_1_d3[15] <= y_1_d2[15];
  always @(posedge clk)
    y_1_d3[16] <= y_1_d2[16];
  always @(posedge clk)
    y_1_d3[17] <= y_1_d2[17];
  always @(posedge clk)
    y_1_d3[18] <= y_1_d2[18];
  always @(posedge clk)
    y_1_d3[19] <= y_1_d2[19];
  always @(posedge clk)
    y_1_d3[20] <= y_1_d2[20];
  always @(posedge clk)
    y_1_d3[21] <= y_1_d2[21];
  always @(posedge clk)
    y_1_d3[22] <= y_1_d2[22];
  always @(posedge clk)
    y_1_d3[23] <= y_1_d2[23];
  always @(posedge clk)
    y_1_d3[24] <= y_1_d2[24];
  always @(posedge clk)
    y_1_d3[25] <= y_1_d2[25];
  always @(posedge clk)
    y_1_d3[26] <= y_1_d2[26];
  always @(posedge clk)
    y_1_d3[27] <= y_1_d2[27];
  always @(posedge clk)
    y_1_d3[28] <= y_1_d2[28];
  always @(posedge clk)
    y_1_d3[29] <= y_1_d2[29];
  always @(posedge clk)
    y_1_d3[30] <= y_1_d2[30];
  always @(posedge clk)
    y_1_d3[31] <= y_1_d2[31];
  always @(posedge clk)
    y_1_d3[32] <= y_1_d2[32];
  always @(posedge clk)
    y_1_d3[33] <= y_1_d2[33];
  always @(posedge clk)
    y_1_d4[0] <= y_1_d3[0];
  always @(posedge clk)
    y_1_d4[1] <= y_1_d3[1];
  always @(posedge clk)
    y_1_d4[2] <= y_1_d3[2];
  always @(posedge clk)
    y_1_d4[3] <= y_1_d3[3];
  always @(posedge clk)
    y_1_d4[4] <= y_1_d3[4];
  always @(posedge clk)
    y_1_d4[5] <= y_1_d3[5];
  always @(posedge clk)
    y_1_d4[6] <= y_1_d3[6];
  always @(posedge clk)
    y_1_d4[7] <= y_1_d3[7];
  always @(posedge clk)
    y_1_d4[8] <= y_1_d3[8];
  always @(posedge clk)
    y_1_d4[9] <= y_1_d3[9];
  always @(posedge clk)
    y_1_d4[10] <= y_1_d3[10];
  always @(posedge clk)
    y_1_d4[11] <= y_1_d3[11];
  always @(posedge clk)
    y_1_d4[12] <= y_1_d3[12];
  always @(posedge clk)
    y_1_d4[13] <= y_1_d3[13];
  always @(posedge clk)
    y_1_d4[14] <= y_1_d3[14];
  always @(posedge clk)
    y_1_d4[15] <= y_1_d3[15];
  always @(posedge clk)
    y_1_d4[16] <= y_1_d3[16];
  always @(posedge clk)
    y_1_d4[17] <= y_1_d3[17];
  always @(posedge clk)
    y_1_d4[18] <= y_1_d3[18];
  always @(posedge clk)
    y_1_d4[19] <= y_1_d3[19];
  always @(posedge clk)
    y_1_d4[20] <= y_1_d3[20];
  always @(posedge clk)
    y_1_d4[21] <= y_1_d3[21];
  always @(posedge clk)
    y_1_d4[22] <= y_1_d3[22];
  always @(posedge clk)
    y_1_d4[23] <= y_1_d3[23];
  always @(posedge clk)
    y_1_d4[24] <= y_1_d3[24];
  always @(posedge clk)
    y_1_d4[25] <= y_1_d3[25];
  always @(posedge clk)
    y_1_d4[26] <= y_1_d3[26];
  always @(posedge clk)
    y_1_d4[27] <= y_1_d3[27];
  always @(posedge clk)
    y_1_d4[28] <= y_1_d3[28];
  always @(posedge clk)
    y_1_d4[29] <= y_1_d3[29];
  always @(posedge clk)
    y_1_d4[30] <= y_1_d3[30];
  always @(posedge clk)
    y_1_d4[31] <= y_1_d3[31];
  always @(posedge clk)
    y_1_d4[32] <= y_1_d3[32];
  always @(posedge clk)
    y_1_d4[33] <= y_1_d3[33];
  always @(posedge clk)
    x_1_d1[0] <= x[0];
  always @(posedge clk)
    x_1_d1[1] <= x[1];
  always @(posedge clk)
    x_1_d1[2] <= x[2];
  always @(posedge clk)
    x_1_d1[3] <= x[3];
  always @(posedge clk)
    x_1_d1[4] <= x[4];
  always @(posedge clk)
    x_1_d1[5] <= x[5];
  always @(posedge clk)
    x_1_d1[6] <= x[6];
  always @(posedge clk)
    x_1_d1[7] <= x[7];
  always @(posedge clk)
    x_1_d1[8] <= x[8];
  always @(posedge clk)
    x_1_d1[9] <= x[9];
  always @(posedge clk)
    x_1_d1[10] <= x[10];
  always @(posedge clk)
    x_1_d1[11] <= x[11];
  always @(posedge clk)
    x_1_d1[12] <= x[12];
  always @(posedge clk)
    x_1_d1[13] <= x[13];
  always @(posedge clk)
    x_1_d1[14] <= x[14];
  always @(posedge clk)
    x_1_d1[15] <= x[15];
  always @(posedge clk)
    x_1_d1[16] <= x[16];
  always @(posedge clk)
    x_1_d1[17] <= x[17];
  always @(posedge clk)
    x_1_d1[18] <= x[18];
  always @(posedge clk)
    x_1_d1[19] <= x[19];
  always @(posedge clk)
    x_1_d1[20] <= x[20];
  always @(posedge clk)
    x_1_d1[21] <= x[21];
  always @(posedge clk)
    x_1_d1[22] <= x[22];
  always @(posedge clk)
    x_1_d1[23] <= x[23];
  always @(posedge clk)
    x_1_d1[24] <= x[24];
  always @(posedge clk)
    x_1_d1[25] <= x[25];
  always @(posedge clk)
    x_1_d1[26] <= x[26];
  always @(posedge clk)
    x_1_d1[27] <= x[27];
  always @(posedge clk)
    x_1_d1[28] <= x[28];
  always @(posedge clk)
    x_1_d1[29] <= x[29];
  always @(posedge clk)
    x_1_d1[30] <= x[30];
  always @(posedge clk)
    x_1_d1[31] <= x[31];
  always @(posedge clk)
    x_1_d1[32] <= x[32];
  always @(posedge clk)
    x_1_d1[33] <= x[33];
  always @(posedge clk)
    y_1_d2[0] <= y_1_d1[0];
  always @(posedge clk)
    y_1_d2[1] <= y_1_d1[1];
  always @(posedge clk)
    y_1_d2[2] <= y_1_d1[2];
  always @(posedge clk)
    y_1_d2[3] <= y_1_d1[3];
  always @(posedge clk)
    y_1_d2[4] <= y_1_d1[4];
  always @(posedge clk)
    y_1_d2[5] <= y_1_d1[5];
  always @(posedge clk)
    y_1_d2[6] <= y_1_d1[6];
  always @(posedge clk)
    y_1_d2[7] <= y_1_d1[7];
  always @(posedge clk)
    y_1_d2[8] <= y_1_d1[8];
  always @(posedge clk)
    y_1_d2[9] <= y_1_d1[9];
  always @(posedge clk)
    y_1_d2[10] <= y_1_d1[10];
  always @(posedge clk)
    y_1_d2[11] <= y_1_d1[11];
  always @(posedge clk)
    y_1_d2[12] <= y_1_d1[12];
  always @(posedge clk)
    y_1_d2[13] <= y_1_d1[13];
  always @(posedge clk)
    y_1_d2[14] <= y_1_d1[14];
  always @(posedge clk)
    y_1_d2[15] <= y_1_d1[15];
  always @(posedge clk)
    y_1_d2[16] <= y_1_d1[16];
  always @(posedge clk)
    y_1_d2[17] <= y_1_d1[17];
  always @(posedge clk)
    y_1_d2[18] <= y_1_d1[18];
  always @(posedge clk)
    y_1_d2[19] <= y_1_d1[19];
  always @(posedge clk)
    y_1_d2[20] <= y_1_d1[20];
  always @(posedge clk)
    y_1_d2[21] <= y_1_d1[21];
  always @(posedge clk)
    y_1_d2[22] <= y_1_d1[22];
  always @(posedge clk)
    y_1_d2[23] <= y_1_d1[23];
  always @(posedge clk)
    y_1_d2[24] <= y_1_d1[24];
  always @(posedge clk)
    y_1_d2[25] <= y_1_d1[25];
  always @(posedge clk)
    y_1_d2[26] <= y_1_d1[26];
  always @(posedge clk)
    y_1_d2[27] <= y_1_d1[27];
  always @(posedge clk)
    y_1_d2[28] <= y_1_d1[28];
  always @(posedge clk)
    y_1_d2[29] <= y_1_d1[29];
  always @(posedge clk)
    y_1_d2[30] <= y_1_d1[30];
  always @(posedge clk)
    y_1_d2[31] <= y_1_d1[31];
  always @(posedge clk)
    y_1_d2[32] <= y_1_d1[32];
  always @(posedge clk)
    y_1_d2[33] <= y_1_d1[33];
  always @(posedge clk)
    cin_1_d1 <= cin;
  always @(posedge clk)
    y_1_d1[0] <= y[0];
  always @(posedge clk)
    y_1_d1[1] <= y[1];
  always @(posedge clk)
    y_1_d1[2] <= y[2];
  always @(posedge clk)
    y_1_d1[3] <= y[3];
  always @(posedge clk)
    y_1_d1[4] <= y[4];
  always @(posedge clk)
    y_1_d1[5] <= y[5];
  always @(posedge clk)
    y_1_d1[6] <= y[6];
  always @(posedge clk)
    y_1_d1[7] <= y[7];
  always @(posedge clk)
    y_1_d1[8] <= y[8];
  always @(posedge clk)
    y_1_d1[9] <= y[9];
  always @(posedge clk)
    y_1_d1[10] <= y[10];
  always @(posedge clk)
    y_1_d1[11] <= y[11];
  always @(posedge clk)
    y_1_d1[12] <= y[12];
  always @(posedge clk)
    y_1_d1[13] <= y[13];
  always @(posedge clk)
    y_1_d1[14] <= y[14];
  always @(posedge clk)
    y_1_d1[15] <= y[15];
  always @(posedge clk)
    y_1_d1[16] <= y[16];
  always @(posedge clk)
    y_1_d1[17] <= y[17];
  always @(posedge clk)
    y_1_d1[18] <= y[18];
  always @(posedge clk)
    y_1_d1[19] <= y[19];
  always @(posedge clk)
    y_1_d1[20] <= y[20];
  always @(posedge clk)
    y_1_d1[21] <= y[21];
  always @(posedge clk)
    y_1_d1[22] <= y[22];
  always @(posedge clk)
    y_1_d1[23] <= y[23];
  always @(posedge clk)
    y_1_d1[24] <= y[24];
  always @(posedge clk)
    y_1_d1[25] <= y[25];
  always @(posedge clk)
    y_1_d1[26] <= y[26];
  always @(posedge clk)
    y_1_d1[27] <= y[27];
  always @(posedge clk)
    y_1_d1[28] <= y[28];
  always @(posedge clk)
    y_1_d1[29] <= y[29];
  always @(posedge clk)
    y_1_d1[30] <= y[30];
  always @(posedge clk)
    y_1_d1[31] <= y[31];
  always @(posedge clk)
    y_1_d1[32] <= y[32];
  always @(posedge clk)
    y_1_d1[33] <= y[33];
  always @(posedge clk)
    y_1_d5[0] <= y_1_d4[0];
  always @(posedge clk)
    y_1_d5[1] <= y_1_d4[1];
  always @(posedge clk)
    y_1_d5[2] <= y_1_d4[2];
  always @(posedge clk)
    y_1_d5[3] <= y_1_d4[3];
  always @(posedge clk)
    y_1_d5[4] <= y_1_d4[4];
  always @(posedge clk)
    y_1_d5[5] <= y_1_d4[5];
  always @(posedge clk)
    y_1_d5[6] <= y_1_d4[6];
  always @(posedge clk)
    y_1_d5[7] <= y_1_d4[7];
  always @(posedge clk)
    y_1_d5[8] <= y_1_d4[8];
  always @(posedge clk)
    y_1_d5[9] <= y_1_d4[9];
  always @(posedge clk)
    y_1_d5[10] <= y_1_d4[10];
  always @(posedge clk)
    y_1_d5[11] <= y_1_d4[11];
  always @(posedge clk)
    y_1_d5[12] <= y_1_d4[12];
  always @(posedge clk)
    y_1_d5[13] <= y_1_d4[13];
  always @(posedge clk)
    y_1_d5[14] <= y_1_d4[14];
  always @(posedge clk)
    y_1_d5[15] <= y_1_d4[15];
  always @(posedge clk)
    y_1_d5[16] <= y_1_d4[16];
  always @(posedge clk)
    y_1_d5[17] <= y_1_d4[17];
  always @(posedge clk)
    y_1_d5[18] <= y_1_d4[18];
  always @(posedge clk)
    y_1_d5[19] <= y_1_d4[19];
  always @(posedge clk)
    y_1_d5[20] <= y_1_d4[20];
  always @(posedge clk)
    y_1_d5[21] <= y_1_d4[21];
  always @(posedge clk)
    y_1_d5[22] <= y_1_d4[22];
  always @(posedge clk)
    y_1_d5[23] <= y_1_d4[23];
  always @(posedge clk)
    y_1_d5[24] <= y_1_d4[24];
  always @(posedge clk)
    y_1_d5[25] <= y_1_d4[25];
  always @(posedge clk)
    y_1_d5[26] <= y_1_d4[26];
  always @(posedge clk)
    y_1_d5[27] <= y_1_d4[27];
  always @(posedge clk)
    y_1_d5[28] <= y_1_d4[28];
  always @(posedge clk)
    y_1_d5[29] <= y_1_d4[29];
  always @(posedge clk)
    y_1_d5[30] <= y_1_d4[30];
  always @(posedge clk)
    y_1_d5[31] <= y_1_d4[31];
  always @(posedge clk)
    y_1_d5[32] <= y_1_d4[32];
  always @(posedge clk)
    y_1_d5[33] <= y_1_d4[33];
  always @(posedge clk)
    y_1_d6[0] <= y_1_d5[0];
  always @(posedge clk)
    y_1_d6[1] <= y_1_d5[1];
  always @(posedge clk)
    y_1_d6[2] <= y_1_d5[2];
  always @(posedge clk)
    y_1_d6[3] <= y_1_d5[3];
  always @(posedge clk)
    y_1_d6[4] <= y_1_d5[4];
  always @(posedge clk)
    y_1_d6[5] <= y_1_d5[5];
  always @(posedge clk)
    y_1_d6[6] <= y_1_d5[6];
  always @(posedge clk)
    y_1_d6[7] <= y_1_d5[7];
  always @(posedge clk)
    y_1_d6[8] <= y_1_d5[8];
  always @(posedge clk)
    y_1_d6[9] <= y_1_d5[9];
  always @(posedge clk)
    y_1_d6[10] <= y_1_d5[10];
  always @(posedge clk)
    y_1_d6[11] <= y_1_d5[11];
  always @(posedge clk)
    y_1_d6[12] <= y_1_d5[12];
  always @(posedge clk)
    y_1_d6[13] <= y_1_d5[13];
  always @(posedge clk)
    y_1_d6[14] <= y_1_d5[14];
  always @(posedge clk)
    y_1_d6[15] <= y_1_d5[15];
  always @(posedge clk)
    y_1_d6[16] <= y_1_d5[16];
  always @(posedge clk)
    y_1_d6[17] <= y_1_d5[17];
  always @(posedge clk)
    y_1_d6[18] <= y_1_d5[18];
  always @(posedge clk)
    y_1_d6[19] <= y_1_d5[19];
  always @(posedge clk)
    y_1_d6[20] <= y_1_d5[20];
  always @(posedge clk)
    y_1_d6[21] <= y_1_d5[21];
  always @(posedge clk)
    y_1_d6[22] <= y_1_d5[22];
  always @(posedge clk)
    y_1_d6[23] <= y_1_d5[23];
  always @(posedge clk)
    y_1_d6[24] <= y_1_d5[24];
  always @(posedge clk)
    y_1_d6[25] <= y_1_d5[25];
  always @(posedge clk)
    y_1_d6[26] <= y_1_d5[26];
  always @(posedge clk)
    y_1_d6[27] <= y_1_d5[27];
  always @(posedge clk)
    y_1_d6[28] <= y_1_d5[28];
  always @(posedge clk)
    y_1_d6[29] <= y_1_d5[29];
  always @(posedge clk)
    y_1_d6[30] <= y_1_d5[30];
  always @(posedge clk)
    y_1_d6[31] <= y_1_d5[31];
  always @(posedge clk)
    y_1_d6[32] <= y_1_d5[32];
  always @(posedge clk)
    y_1_d6[33] <= y_1_d5[33];
  always @(posedge clk)
    y_1_d7[0] <= y_1_d6[0];
  always @(posedge clk)
    y_1_d7[1] <= y_1_d6[1];
  always @(posedge clk)
    y_1_d7[2] <= y_1_d6[2];
  always @(posedge clk)
    y_1_d7[3] <= y_1_d6[3];
  always @(posedge clk)
    y_1_d7[4] <= y_1_d6[4];
  always @(posedge clk)
    y_1_d7[5] <= y_1_d6[5];
  always @(posedge clk)
    y_1_d7[6] <= y_1_d6[6];
  always @(posedge clk)
    y_1_d7[7] <= y_1_d6[7];
  always @(posedge clk)
    y_1_d7[8] <= y_1_d6[8];
  always @(posedge clk)
    y_1_d7[9] <= y_1_d6[9];
  always @(posedge clk)
    y_1_d7[10] <= y_1_d6[10];
  always @(posedge clk)
    y_1_d7[11] <= y_1_d6[11];
  always @(posedge clk)
    y_1_d7[12] <= y_1_d6[12];
  always @(posedge clk)
    y_1_d7[13] <= y_1_d6[13];
  always @(posedge clk)
    y_1_d7[14] <= y_1_d6[14];
  always @(posedge clk)
    y_1_d7[15] <= y_1_d6[15];
  always @(posedge clk)
    y_1_d7[16] <= y_1_d6[16];
  always @(posedge clk)
    y_1_d7[17] <= y_1_d6[17];
  always @(posedge clk)
    y_1_d7[18] <= y_1_d6[18];
  always @(posedge clk)
    y_1_d7[19] <= y_1_d6[19];
  always @(posedge clk)
    y_1_d7[20] <= y_1_d6[20];
  always @(posedge clk)
    y_1_d7[21] <= y_1_d6[21];
  always @(posedge clk)
    y_1_d7[22] <= y_1_d6[22];
  always @(posedge clk)
    y_1_d7[23] <= y_1_d6[23];
  always @(posedge clk)
    y_1_d7[24] <= y_1_d6[24];
  always @(posedge clk)
    y_1_d7[25] <= y_1_d6[25];
  always @(posedge clk)
    y_1_d7[26] <= y_1_d6[26];
  always @(posedge clk)
    y_1_d7[27] <= y_1_d6[27];
  always @(posedge clk)
    y_1_d7[28] <= y_1_d6[28];
  always @(posedge clk)
    y_1_d7[29] <= y_1_d6[29];
  always @(posedge clk)
    y_1_d7[30] <= y_1_d6[30];
  always @(posedge clk)
    y_1_d7[31] <= y_1_d6[31];
  always @(posedge clk)
    y_1_d7[32] <= y_1_d6[32];
  always @(posedge clk)
    y_1_d7[33] <= y_1_d6[33];
  always @(posedge clk)
    y_1_d8[0] <= y_1_d7[0];
  always @(posedge clk)
    y_1_d8[1] <= y_1_d7[1];
  always @(posedge clk)
    y_1_d8[2] <= y_1_d7[2];
  always @(posedge clk)
    y_1_d8[3] <= y_1_d7[3];
  always @(posedge clk)
    y_1_d8[4] <= y_1_d7[4];
  always @(posedge clk)
    y_1_d8[5] <= y_1_d7[5];
  always @(posedge clk)
    y_1_d8[6] <= y_1_d7[6];
  always @(posedge clk)
    y_1_d8[7] <= y_1_d7[7];
  always @(posedge clk)
    y_1_d8[8] <= y_1_d7[8];
  always @(posedge clk)
    y_1_d8[9] <= y_1_d7[9];
  always @(posedge clk)
    y_1_d8[10] <= y_1_d7[10];
  always @(posedge clk)
    y_1_d8[11] <= y_1_d7[11];
  always @(posedge clk)
    y_1_d8[12] <= y_1_d7[12];
  always @(posedge clk)
    y_1_d8[13] <= y_1_d7[13];
  always @(posedge clk)
    y_1_d8[14] <= y_1_d7[14];
  always @(posedge clk)
    y_1_d8[15] <= y_1_d7[15];
  always @(posedge clk)
    y_1_d8[16] <= y_1_d7[16];
  always @(posedge clk)
    y_1_d8[17] <= y_1_d7[17];
  always @(posedge clk)
    y_1_d8[18] <= y_1_d7[18];
  always @(posedge clk)
    y_1_d8[19] <= y_1_d7[19];
  always @(posedge clk)
    y_1_d8[20] <= y_1_d7[20];
  always @(posedge clk)
    y_1_d8[21] <= y_1_d7[21];
  always @(posedge clk)
    y_1_d8[22] <= y_1_d7[22];
  always @(posedge clk)
    y_1_d8[23] <= y_1_d7[23];
  always @(posedge clk)
    y_1_d8[24] <= y_1_d7[24];
  always @(posedge clk)
    y_1_d8[25] <= y_1_d7[25];
  reg _756_;
  always @(posedge clk)
    _756_ <= y_1_d7[26];
  assign _211_[26] = _756_;
  reg _757_;
  always @(posedge clk)
    _757_ <= y_1_d7[27];
  assign _211_[27] = _757_;
  reg _758_;
  always @(posedge clk)
    _758_ <= y_1_d7[28];
  assign _211_[28] = _758_;
  reg _759_;
  always @(posedge clk)
    _759_ <= y_1_d7[29];
  assign _211_[29] = _759_;
  reg _760_;
  always @(posedge clk)
    _760_ <= y_1_d7[30];
  assign _211_[30] = _760_;
  reg _761_;
  always @(posedge clk)
    _761_ <= y_1_d7[31];
  assign _211_[31] = _761_;
  reg _762_;
  always @(posedge clk)
    _762_ <= y_1_d7[32];
  assign _211_[32] = _762_;
  reg _763_;
  always @(posedge clk)
    _763_ <= y_1_d7[33];
  assign _211_[33] = _763_;
  assign _211_[25:0] = y_1_d8;
  assign cin_1 = cin;
  assign r_1 = r;
  assign s_1 = { 1'hx, r };
  assign x_1 = { 1'h0, x };
  assign y_1 = y[28:0];
endmodule

module normalizer_z_28_28_28_freq500_uid8(clk, x, count, r);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  input clk;
  wire clk;
  output [4:0] count;
  wire [4:0] count;
  wire count0;
  wire count1;
  reg count1_d1;
  wire count2;
  reg count2_d1;
  wire count3;
  reg count3_d1;
  reg count3_d2;
  wire count4;
  reg count4_d1;
  reg count4_d2;
  reg count4_d3;
  wire [27:0] level0;
  (* unused_bits = "0 1" *)
  wire [27:0] level1;
  reg [27:0] level1_d1;
  (* unused_bits = "2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27" *)
  wire [27:0] level2;
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [27:0] level3;
  reg [27:0] level3_d1;
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27" *)
  wire [27:0] level4;
  wire [27:0] level5;
  reg [27:0] level5_d1;
  output [27:0] r;
  wire [27:0] r;
  wire [4:0] scount;
  input [27:0] x;
  wire [27:0] x;
  assign _002_ = count4_d1 ? level5_d1[4] : level5_d1[20];
  assign _003_ = count4_d1 ? level5_d1[5] : level5_d1[21];
  assign _004_ = ~(_003_ | _002_);
  assign _005_ = count4_d1 ? level5_d1[6] : level5_d1[22];
  assign _006_ = count4_d1 ? level5_d1[7] : level5_d1[23];
  assign _007_ = _006_ | _005_;
  assign _008_ = _004_ & ~(_007_);
  assign _009_ = count4_d1 ? level5_d1[8] : level5_d1[24];
  assign _010_ = count4_d1 ? level5_d1[9] : level5_d1[25];
  assign _011_ = _010_ | _009_;
  assign _012_ = count4_d1 ? level5_d1[10] : level5_d1[26];
  assign _013_ = count4_d1 ? level5_d1[11] : level5_d1[27];
  assign _014_ = _013_ | _012_;
  assign _015_ = _014_ | _011_;
  assign _000_ = _015_ | ~(_008_);
  assign _016_ = ~(level3_d1[25] | level3_d1[24]);
  assign _017_ = level3_d1[27] | level3_d1[26];
  assign _018_ = _017_ | ~(_016_);
  assign _019_ = _018_ ? level3_d1[26] : level3_d1[22];
  assign _020_ = _018_ ? level3_d1[27] : level3_d1[23];
  assign _001_ = _020_ | _019_;
  assign _021_ = ~(x[13] | x[12]);
  assign _022_ = x[15] | x[14];
  assign _023_ = _021_ & ~(_022_);
  assign _024_ = x[17] | x[16];
  assign _025_ = x[19] | x[18];
  assign _026_ = _025_ | _024_;
  assign _027_ = _023_ & ~(_026_);
  assign _028_ = x[21] | x[20];
  assign _029_ = x[23] | x[22];
  assign _030_ = _029_ | _028_;
  assign _031_ = x[25] | x[24];
  assign _032_ = x[27] | x[26];
  assign _033_ = _032_ | _031_;
  assign _034_ = _033_ | _030_;
  assign count4 = _027_ & ~(_034_);
  assign count3 = _008_ & ~(_015_);
  assign count2 = _016_ & ~(_017_);
  assign count1 = ~(_020_ | _019_);
  assign level4[0] = level5_d1[0] & ~(count4_d1);
  assign level4[1] = level5_d1[1] & ~(count4_d1);
  assign level4[2] = level5_d1[2] & ~(count4_d1);
  assign level4[3] = level5_d1[3] & ~(count4_d1);
  assign level4[4] = level5_d1[4] & ~(count4_d1);
  assign level4[5] = level5_d1[5] & ~(count4_d1);
  assign level4[6] = level5_d1[6] & ~(count4_d1);
  assign level4[7] = level5_d1[7] & ~(count4_d1);
  assign _035_ = level5_d1[8] & ~(count4_d1);
  assign level3[8] = count3 ? level4[0] : _035_;
  assign _036_ = level5_d1[9] & ~(count4_d1);
  assign level3[9] = count3 ? level4[1] : _036_;
  assign _037_ = level5_d1[10] & ~(count4_d1);
  assign level3[10] = count3 ? level4[2] : _037_;
  assign _038_ = level5_d1[11] & ~(count4_d1);
  assign level3[11] = count3 ? level4[3] : _038_;
  assign _039_ = level5_d1[12] & ~(count4_d1);
  assign level3[12] = count3 ? level4[4] : _039_;
  assign _040_ = level5_d1[13] & ~(count4_d1);
  assign level3[13] = count3 ? level4[5] : _040_;
  assign _041_ = level5_d1[14] & ~(count4_d1);
  assign level3[14] = count3 ? level4[6] : _041_;
  assign _042_ = level5_d1[15] & ~(count4_d1);
  assign level3[15] = count3 ? level4[7] : _042_;
  assign _043_ = count4_d1 ? level5_d1[0] : level5_d1[16];
  assign level3[16] = count3 ? _035_ : _043_;
  assign _044_ = count4_d1 ? level5_d1[1] : level5_d1[17];
  assign level3[17] = count3 ? _036_ : _044_;
  assign _045_ = count4_d1 ? level5_d1[2] : level5_d1[18];
  assign level3[18] = count3 ? _037_ : _045_;
  assign _046_ = count4_d1 ? level5_d1[3] : level5_d1[19];
  assign level3[19] = count3 ? _038_ : _046_;
  assign level3[20] = count3 ? _039_ : _002_;
  assign level3[21] = count3 ? _040_ : _003_;
  assign level3[22] = _000_ ? _005_ : _041_;
  assign level3[23] = _000_ ? _006_ : _042_;
  assign level3[24] = _000_ ? _009_ : _043_;
  assign level3[25] = _000_ ? _010_ : _044_;
  assign level3[26] = _000_ ? _012_ : _045_;
  assign level3[27] = _000_ ? _013_ : _046_;
  assign level2[0] = level3_d1[0] & ~(count2);
  assign level2[1] = level3_d1[1] & ~(count2);
  assign _047_ = level3_d1[2] & ~(count2);
  assign level1[2] = count1 ? level2[0] : _047_;
  assign _048_ = level3_d1[3] & ~(count2);
  assign level1[3] = count1 ? level2[1] : _048_;
  assign _049_ = count2 ? level3_d1[0] : level3_d1[4];
  assign level1[4] = count1 ? _047_ : _049_;
  assign _050_ = count2 ? level3_d1[1] : level3_d1[5];
  assign level1[5] = count1 ? _048_ : _050_;
  assign _051_ = count2 ? level3_d1[2] : level3_d1[6];
  assign level1[6] = count1 ? _049_ : _051_;
  assign _052_ = count2 ? level3_d1[3] : level3_d1[7];
  assign level1[7] = count1 ? _050_ : _052_;
  assign _053_ = count2 ? level3_d1[4] : level3_d1[8];
  assign level1[8] = count1 ? _051_ : _053_;
  assign _054_ = count2 ? level3_d1[5] : level3_d1[9];
  assign level1[9] = count1 ? _052_ : _054_;
  assign _055_ = count2 ? level3_d1[6] : level3_d1[10];
  assign level1[10] = count1 ? _053_ : _055_;
  assign _056_ = count2 ? level3_d1[7] : level3_d1[11];
  assign level1[11] = count1 ? _054_ : _056_;
  assign _057_ = count2 ? level3_d1[8] : level3_d1[12];
  assign level1[12] = count1 ? _055_ : _057_;
  assign _058_ = count2 ? level3_d1[9] : level3_d1[13];
  assign level1[13] = count1 ? _056_ : _058_;
  assign _059_ = count2 ? level3_d1[10] : level3_d1[14];
  assign level1[14] = count1 ? _057_ : _059_;
  assign _060_ = count2 ? level3_d1[11] : level3_d1[15];
  assign level1[15] = count1 ? _058_ : _060_;
  assign _061_ = count2 ? level3_d1[12] : level3_d1[16];
  assign level1[16] = count1 ? _059_ : _061_;
  assign _062_ = count2 ? level3_d1[13] : level3_d1[17];
  assign level1[17] = count1 ? _060_ : _062_;
  assign _063_ = count2 ? level3_d1[14] : level3_d1[18];
  assign level1[18] = count1 ? _061_ : _063_;
  assign _064_ = count2 ? level3_d1[15] : level3_d1[19];
  assign level1[19] = count1 ? _062_ : _064_;
  assign _065_ = count2 ? level3_d1[16] : level3_d1[20];
  assign level1[20] = count1 ? _063_ : _065_;
  assign _066_ = count2 ? level3_d1[17] : level3_d1[21];
  assign level1[21] = count1 ? _064_ : _066_;
  assign _067_ = count2 ? level3_d1[18] : level3_d1[22];
  assign level1[22] = count1 ? _065_ : _067_;
  assign _068_ = count2 ? level3_d1[19] : level3_d1[23];
  assign level1[23] = count1 ? _066_ : _068_;
  assign _069_ = _018_ ? level3_d1[24] : level3_d1[20];
  assign level1[24] = count1 ? _067_ : _069_;
  assign _070_ = _018_ ? level3_d1[25] : level3_d1[21];
  assign level1[25] = count1 ? _068_ : _070_;
  assign level1[26] = _001_ ? _019_ : _069_;
  assign level1[27] = count1 ? _070_ : _020_;
  assign r[0] = level1_d1[27] & level1_d1[0];
  assign r[1] = level1_d1[27] ? level1_d1[1] : level1_d1[0];
  assign r[2] = level1_d1[27] ? level1_d1[2] : level1_d1[1];
  assign r[3] = level1_d1[27] ? level1_d1[3] : level1_d1[2];
  assign r[4] = level1_d1[27] ? level1_d1[4] : level1_d1[3];
  assign r[5] = level1_d1[27] ? level1_d1[5] : level1_d1[4];
  assign r[6] = level1_d1[27] ? level1_d1[6] : level1_d1[5];
  assign r[7] = level1_d1[27] ? level1_d1[7] : level1_d1[6];
  assign r[8] = level1_d1[27] ? level1_d1[8] : level1_d1[7];
  assign r[9] = level1_d1[27] ? level1_d1[9] : level1_d1[8];
  assign r[10] = level1_d1[27] ? level1_d1[10] : level1_d1[9];
  assign r[11] = level1_d1[27] ? level1_d1[11] : level1_d1[10];
  assign r[12] = level1_d1[27] ? level1_d1[12] : level1_d1[11];
  assign r[13] = level1_d1[27] ? level1_d1[13] : level1_d1[12];
  assign r[14] = level1_d1[27] ? level1_d1[14] : level1_d1[13];
  assign r[15] = level1_d1[27] ? level1_d1[15] : level1_d1[14];
  assign r[16] = level1_d1[27] ? level1_d1[16] : level1_d1[15];
  assign r[17] = level1_d1[27] ? level1_d1[17] : level1_d1[16];
  assign r[18] = level1_d1[27] ? level1_d1[18] : level1_d1[17];
  assign r[19] = level1_d1[27] ? level1_d1[19] : level1_d1[18];
  assign r[20] = level1_d1[27] ? level1_d1[20] : level1_d1[19];
  assign r[21] = level1_d1[27] ? level1_d1[21] : level1_d1[20];
  assign r[22] = level1_d1[27] ? level1_d1[22] : level1_d1[21];
  assign r[23] = level1_d1[27] ? level1_d1[23] : level1_d1[22];
  assign r[24] = level1_d1[27] ? level1_d1[24] : level1_d1[23];
  assign r[25] = level1_d1[27] ? level1_d1[25] : level1_d1[24];
  assign r[26] = level1_d1[27] ? level1_d1[26] : level1_d1[25];
  assign r[27] = level1_d1[26] | level1_d1[27];
  assign count0 = ~level1_d1[27];
  always @(posedge clk)
    level1_d1[2] <= level1[2];
  always @(posedge clk)
    level1_d1[3] <= level1[3];
  always @(posedge clk)
    level1_d1[4] <= level1[4];
  always @(posedge clk)
    level1_d1[5] <= level1[5];
  always @(posedge clk)
    level1_d1[6] <= level1[6];
  always @(posedge clk)
    level1_d1[7] <= level1[7];
  always @(posedge clk)
    level1_d1[8] <= level1[8];
  always @(posedge clk)
    level1_d1[9] <= level1[9];
  always @(posedge clk)
    level1_d1[10] <= level1[10];
  always @(posedge clk)
    level1_d1[11] <= level1[11];
  always @(posedge clk)
    level1_d1[12] <= level1[12];
  always @(posedge clk)
    level1_d1[13] <= level1[13];
  always @(posedge clk)
    level1_d1[14] <= level1[14];
  always @(posedge clk)
    level1_d1[15] <= level1[15];
  always @(posedge clk)
    level1_d1[16] <= level1[16];
  always @(posedge clk)
    level1_d1[17] <= level1[17];
  always @(posedge clk)
    level1_d1[18] <= level1[18];
  always @(posedge clk)
    level1_d1[19] <= level1[19];
  always @(posedge clk)
    level1_d1[20] <= level1[20];
  always @(posedge clk)
    level1_d1[21] <= level1[21];
  always @(posedge clk)
    level1_d1[22] <= level1[22];
  always @(posedge clk)
    level1_d1[23] <= level1[23];
  always @(posedge clk)
    level1_d1[24] <= level1[24];
  always @(posedge clk)
    level1_d1[25] <= level1[25];
  always @(posedge clk)
    level1_d1[26] <= level1[26];
  always @(posedge clk)
    level1_d1[27] <= level1[27];
  always @(posedge clk)
    level5_d1[0] <= x[0];
  always @(posedge clk)
    level5_d1[1] <= x[1];
  always @(posedge clk)
    level5_d1[2] <= x[2];
  always @(posedge clk)
    level5_d1[3] <= x[3];
  always @(posedge clk)
    level5_d1[4] <= x[4];
  always @(posedge clk)
    level5_d1[5] <= x[5];
  always @(posedge clk)
    level5_d1[6] <= x[6];
  always @(posedge clk)
    level5_d1[7] <= x[7];
  always @(posedge clk)
    level5_d1[8] <= x[8];
  always @(posedge clk)
    level5_d1[9] <= x[9];
  always @(posedge clk)
    level5_d1[10] <= x[10];
  always @(posedge clk)
    level5_d1[11] <= x[11];
  always @(posedge clk)
    level5_d1[12] <= x[12];
  always @(posedge clk)
    level5_d1[13] <= x[13];
  always @(posedge clk)
    level5_d1[14] <= x[14];
  always @(posedge clk)
    level5_d1[15] <= x[15];
  always @(posedge clk)
    level5_d1[16] <= x[16];
  always @(posedge clk)
    level5_d1[17] <= x[17];
  always @(posedge clk)
    level5_d1[18] <= x[18];
  always @(posedge clk)
    level5_d1[19] <= x[19];
  always @(posedge clk)
    level5_d1[20] <= x[20];
  always @(posedge clk)
    level5_d1[21] <= x[21];
  always @(posedge clk)
    level5_d1[22] <= x[22];
  always @(posedge clk)
    level5_d1[23] <= x[23];
  always @(posedge clk)
    level5_d1[24] <= x[24];
  always @(posedge clk)
    level5_d1[25] <= x[25];
  always @(posedge clk)
    level5_d1[26] <= x[26];
  always @(posedge clk)
    level5_d1[27] <= x[27];
  always @(posedge clk)
    count4_d1 <= count4;
  always @(posedge clk)
    count4_d2 <= count4_d1;
  always @(posedge clk)
    count4_d3 <= count4_d2;
  always @(posedge clk)
    count3_d1 <= count3;
  always @(posedge clk)
    count3_d2 <= count3_d1;
  always @(posedge clk)
    count2_d1 <= count2;
  always @(posedge clk)
    count1_d1 <= count1;
  always @(posedge clk)
    if (!_000_) level3_d1[0] <= 1'h0;
    else level3_d1[0] <= level4[0];
  always @(posedge clk)
    if (!_000_) level3_d1[1] <= 1'h0;
    else level3_d1[1] <= level4[1];
  always @(posedge clk)
    if (!_000_) level3_d1[2] <= 1'h0;
    else level3_d1[2] <= level4[2];
  always @(posedge clk)
    if (!_000_) level3_d1[3] <= 1'h0;
    else level3_d1[3] <= level4[3];
  always @(posedge clk)
    if (!_000_) level3_d1[4] <= 1'h0;
    else level3_d1[4] <= level4[4];
  always @(posedge clk)
    if (!_000_) level3_d1[5] <= 1'h0;
    else level3_d1[5] <= level4[5];
  always @(posedge clk)
    if (!_000_) level3_d1[6] <= 1'h0;
    else level3_d1[6] <= level4[6];
  always @(posedge clk)
    if (!_000_) level3_d1[7] <= 1'h0;
    else level3_d1[7] <= level4[7];
  always @(posedge clk)
    level3_d1[8] <= level3[8];
  always @(posedge clk)
    level3_d1[9] <= level3[9];
  always @(posedge clk)
    level3_d1[10] <= level3[10];
  always @(posedge clk)
    level3_d1[11] <= level3[11];
  always @(posedge clk)
    level3_d1[12] <= level3[12];
  always @(posedge clk)
    level3_d1[13] <= level3[13];
  always @(posedge clk)
    level3_d1[14] <= level3[14];
  always @(posedge clk)
    level3_d1[15] <= level3[15];
  always @(posedge clk)
    level3_d1[16] <= level3[16];
  always @(posedge clk)
    level3_d1[17] <= level3[17];
  always @(posedge clk)
    level3_d1[18] <= level3[18];
  always @(posedge clk)
    level3_d1[19] <= level3[19];
  always @(posedge clk)
    level3_d1[20] <= level3[20];
  always @(posedge clk)
    level3_d1[21] <= level3[21];
  always @(posedge clk)
    level3_d1[22] <= level3[22];
  always @(posedge clk)
    level3_d1[23] <= level3[23];
  always @(posedge clk)
    level3_d1[24] <= level3[24];
  always @(posedge clk)
    level3_d1[25] <= level3[25];
  always @(posedge clk)
    level3_d1[26] <= level3[26];
  always @(posedge clk)
    level3_d1[27] <= level3[27];
  always @(posedge clk)
    if (!_001_) level1_d1[0] <= 1'h0;
    else level1_d1[0] <= level2[0];
  always @(posedge clk)
    if (!_001_) level1_d1[1] <= 1'h0;
    else level1_d1[1] <= level2[1];
  assign count = { count4_d3, count3_d2, count2_d1, count1_d1, count0 };
  assign level0 = r;
  assign level5 = x;
  assign scount = { count4_d3, count3_d2, count2_d1, count1_d1, count0 };
endmodule

module rightshiftersticky24_by_max_26_freq500_uid4(clk, x, s, r, sticky);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  input clk;
  wire clk;
  wire [25:0] level0;
  (* unused_bits = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25" *)
  wire [25:0] level1;
  reg level1_d1;
  wire [21:0] level2;
  reg [25:0] level2_d1;
  (* unused_bits = "4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21" *)
  wire [25:0] level3;
  reg [3:0] level3_d1;
  (* unused_bits = "8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25" *)
  wire [25:0] level4;
  reg [7:0] level4_d1;
  wire [25:0] level5;
  wire [4:0] ps;
  reg [3:0] ps_d1;
  reg ps_d2;
  output [25:0] r;
  wire [25:0] r;
  input [4:0] s;
  wire [4:0] s;
  output sticky;
  wire sticky;
  wire stk;
  wire stk0;
  wire stk1;
  reg stk1_d1;
  wire stk4;
  reg stk4_d1;
  input [23:0] x;
  wire [23:0] x;
  wire [25:0] xpadded;
  assign level4[0] = s[4] & x[14];
  assign level4[1] = x[15] & s[4];
  assign level4[2] = s[4] ? x[16] : x[0];
  assign level4[3] = s[4] ? x[17] : x[1];
  assign level4[4] = s[4] ? x[18] : x[2];
  assign level4[5] = s[4] ? x[19] : x[3];
  assign level4[6] = s[4] ? x[20] : x[4];
  assign level4[7] = s[4] ? x[21] : x[5];
  assign _000_ = s[4] ? x[22] : x[6];
  assign level3[0] = s[3] ? _000_ : level4[0];
  assign _001_ = s[4] ? x[23] : x[7];
  assign level3[1] = s[3] ? _001_ : level4[1];
  assign _002_ = x[8] & ~(s[4]);
  assign level3[2] = s[3] ? _002_ : level4[2];
  assign _003_ = x[9] & ~(s[4]);
  assign level3[3] = s[3] ? _003_ : level4[3];
  assign _004_ = x[20] & ~(s[4]);
  assign level3[22] = _004_ & ~(s[3]);
  assign _005_ = x[21] & ~(s[4]);
  assign level3[23] = _005_ & ~(s[3]);
  assign _006_ = x[22] & ~(s[4]);
  assign level3[24] = _006_ & ~(s[3]);
  assign _007_ = x[23] & ~(s[4]);
  assign level3[25] = _007_ & ~(s[3]);
  assign _008_ = x[10] & ~(s[4]);
  assign _009_ = s[3] ? _008_ : level4[4];
  assign level2[0] = s[2] ? _009_ : level3[0];
  assign _010_ = x[11] & ~(s[4]);
  assign _011_ = s[3] ? _010_ : level4[5];
  assign level2[1] = s[2] ? _011_ : level3[1];
  assign _012_ = x[12] & ~(s[4]);
  assign _013_ = s[3] ? _012_ : level4[6];
  assign level2[2] = s[2] ? _013_ : level3[2];
  assign _014_ = x[13] & ~(s[4]);
  assign _015_ = s[3] ? _014_ : level4[7];
  assign level2[3] = s[2] ? _015_ : level3[3];
  assign _016_ = x[14] & ~(s[4]);
  assign _017_ = s[3] ? _016_ : _000_;
  assign level2[4] = s[2] ? _017_ : _009_;
  assign _018_ = x[15] & ~(s[4]);
  assign _019_ = s[3] ? _018_ : _001_;
  assign level2[5] = s[2] ? _019_ : _011_;
  assign _020_ = x[16] & ~(s[4]);
  assign _021_ = s[3] ? _020_ : _002_;
  assign level2[6] = s[2] ? _021_ : _013_;
  assign _022_ = x[17] & ~(s[4]);
  assign _023_ = s[3] ? _022_ : _003_;
  assign level2[7] = s[2] ? _023_ : _015_;
  assign _024_ = x[18] & ~(s[4]);
  assign _025_ = s[3] ? _024_ : _008_;
  assign level2[8] = s[2] ? _025_ : _017_;
  assign _026_ = x[19] & ~(s[4]);
  assign _027_ = s[3] ? _026_ : _010_;
  assign level2[9] = s[2] ? _027_ : _019_;
  assign _028_ = s[3] ? _004_ : _012_;
  assign level2[10] = s[2] ? _028_ : _021_;
  assign _029_ = s[3] ? _005_ : _014_;
  assign level2[11] = s[2] ? _029_ : _023_;
  assign _030_ = s[3] ? _006_ : _016_;
  assign level2[12] = s[2] ? _030_ : _025_;
  assign _031_ = s[3] ? _007_ : _018_;
  assign level2[13] = s[2] ? _031_ : _027_;
  assign _032_ = _020_ & ~(s[3]);
  assign level2[14] = s[2] ? _032_ : _028_;
  assign _033_ = _022_ & ~(s[3]);
  assign level2[15] = s[2] ? _033_ : _029_;
  assign _034_ = _024_ & ~(s[3]);
  assign level2[16] = s[2] ? _034_ : _030_;
  assign _035_ = _026_ & ~(s[3]);
  assign level2[17] = s[2] ? _035_ : _031_;
  assign level2[18] = s[2] ? level3[22] : _032_;
  assign level2[19] = s[2] ? level3[23] : _033_;
  assign level2[20] = s[2] ? level3[24] : _034_;
  assign level2[21] = s[2] ? level3[25] : _035_;
  assign level1[0] = ps_d1[1] ? level2_d1[2] : level2_d1[0];
  assign _036_ = ps_d1[1] ? level2_d1[3] : level2_d1[1];
  assign r[0] = ps_d1[0] ? _036_ : level1[0];
  assign _037_ = ps_d1[1] ? level2_d1[4] : level2_d1[2];
  assign r[1] = ps_d1[0] ? _037_ : _036_;
  assign _038_ = ps_d1[1] ? level2_d1[5] : level2_d1[3];
  assign r[2] = ps_d1[0] ? _038_ : _037_;
  assign _039_ = ps_d1[1] ? level2_d1[6] : level2_d1[4];
  assign r[3] = ps_d1[0] ? _039_ : _038_;
  assign _040_ = ps_d1[1] ? level2_d1[7] : level2_d1[5];
  assign r[4] = ps_d1[0] ? _040_ : _039_;
  assign _041_ = ps_d1[1] ? level2_d1[8] : level2_d1[6];
  assign r[5] = ps_d1[0] ? _041_ : _040_;
  assign _042_ = ps_d1[1] ? level2_d1[9] : level2_d1[7];
  assign r[6] = ps_d1[0] ? _042_ : _041_;
  assign _043_ = ps_d1[1] ? level2_d1[10] : level2_d1[8];
  assign r[7] = ps_d1[0] ? _043_ : _042_;
  assign _044_ = ps_d1[1] ? level2_d1[11] : level2_d1[9];
  assign r[8] = ps_d1[0] ? _044_ : _043_;
  assign _045_ = ps_d1[1] ? level2_d1[12] : level2_d1[10];
  assign r[9] = ps_d1[0] ? _045_ : _044_;
  assign _046_ = ps_d1[1] ? level2_d1[13] : level2_d1[11];
  assign r[10] = ps_d1[0] ? _046_ : _045_;
  assign _047_ = ps_d1[1] ? level2_d1[14] : level2_d1[12];
  assign r[11] = ps_d1[0] ? _047_ : _046_;
  assign _048_ = ps_d1[1] ? level2_d1[15] : level2_d1[13];
  assign r[12] = ps_d1[0] ? _048_ : _047_;
  assign _049_ = ps_d1[1] ? level2_d1[16] : level2_d1[14];
  assign r[13] = ps_d1[0] ? _049_ : _048_;
  assign _050_ = ps_d1[1] ? level2_d1[17] : level2_d1[15];
  assign r[14] = ps_d1[0] ? _050_ : _049_;
  assign _051_ = ps_d1[1] ? level2_d1[18] : level2_d1[16];
  assign r[15] = ps_d1[0] ? _051_ : _050_;
  assign _052_ = ps_d1[1] ? level2_d1[19] : level2_d1[17];
  assign r[16] = ps_d1[0] ? _052_ : _051_;
  assign _053_ = ps_d1[1] ? level2_d1[20] : level2_d1[18];
  assign r[17] = ps_d1[0] ? _053_ : _052_;
  assign _054_ = ps_d1[1] ? level2_d1[21] : level2_d1[19];
  assign r[18] = ps_d1[0] ? _054_ : _053_;
  assign _055_ = ps_d1[1] ? level2_d1[22] : level2_d1[20];
  assign r[19] = ps_d1[0] ? _055_ : _054_;
  assign _056_ = ps_d1[1] ? level2_d1[23] : level2_d1[21];
  assign r[20] = ps_d1[0] ? _056_ : _055_;
  assign _057_ = ps_d1[1] ? level2_d1[24] : level2_d1[22];
  assign r[21] = ps_d1[0] ? _057_ : _056_;
  assign _058_ = ps_d1[1] ? level2_d1[25] : level2_d1[23];
  assign r[22] = ps_d1[0] ? _058_ : _057_;
  assign _059_ = level2_d1[24] & ~(ps_d1[1]);
  assign r[23] = ps_d1[0] ? _059_ : _058_;
  assign _060_ = level2_d1[25] & ~(ps_d1[1]);
  assign r[24] = ps_d1[0] ? _060_ : _059_;
  assign r[25] = _060_ & ~(ps_d1[0]);
  assign _061_ = ~(x[1] | x[0]);
  assign _062_ = x[3] | x[2];
  assign _063_ = _061_ & ~(_062_);
  assign _064_ = x[5] | x[4];
  assign _065_ = x[7] | x[6];
  assign _066_ = _065_ | _064_;
  assign _067_ = _063_ & ~(_066_);
  assign _068_ = x[9] | x[8];
  assign _069_ = x[11] | x[10];
  assign _070_ = _069_ | _068_;
  assign _071_ = x[13] | x[12];
  assign _072_ = _071_ | _070_;
  assign _073_ = _067_ & ~(_072_);
  assign stk4 = s[4] & ~(_073_);
  assign _074_ = ~(level2_d1[1] | level2_d1[0]);
  assign _075_ = ps_d1[1] & ~(_074_);
  assign _076_ = ~(level3_d1[1] | level3_d1[0]);
  assign _077_ = level3_d1[3] | level3_d1[2];
  assign _078_ = _076_ & ~(_077_);
  assign _079_ = ps_d1[2] & ~(_078_);
  assign _080_ = ~(level4_d1[1] | level4_d1[0]);
  assign _081_ = level4_d1[3] | level4_d1[2];
  assign _082_ = _080_ & ~(_081_);
  assign _083_ = level4_d1[5] | level4_d1[4];
  assign _084_ = level4_d1[7] | level4_d1[6];
  assign _085_ = _084_ | _083_;
  assign _086_ = _082_ & ~(_085_);
  assign _087_ = ps_d1[3] & ~(_086_);
  assign _088_ = _087_ | stk4_d1;
  assign _089_ = _088_ | _079_;
  assign stk1 = _089_ | _075_;
  assign _090_ = level1_d1 & ps_d2;
  assign sticky = _090_ | stk1_d1;
  always @(posedge clk)
    level2_d1[0] <= level2[0];
  always @(posedge clk)
    level2_d1[1] <= level2[1];
  always @(posedge clk)
    level2_d1[2] <= level2[2];
  always @(posedge clk)
    level2_d1[3] <= level2[3];
  always @(posedge clk)
    level2_d1[4] <= level2[4];
  always @(posedge clk)
    level2_d1[5] <= level2[5];
  always @(posedge clk)
    level2_d1[6] <= level2[6];
  always @(posedge clk)
    level2_d1[7] <= level2[7];
  always @(posedge clk)
    level2_d1[8] <= level2[8];
  always @(posedge clk)
    level2_d1[9] <= level2[9];
  always @(posedge clk)
    level2_d1[10] <= level2[10];
  always @(posedge clk)
    level2_d1[11] <= level2[11];
  always @(posedge clk)
    level2_d1[12] <= level2[12];
  always @(posedge clk)
    level2_d1[13] <= level2[13];
  always @(posedge clk)
    level2_d1[14] <= level2[14];
  always @(posedge clk)
    level2_d1[15] <= level2[15];
  always @(posedge clk)
    level2_d1[16] <= level2[16];
  always @(posedge clk)
    level2_d1[17] <= level2[17];
  always @(posedge clk)
    level2_d1[18] <= level2[18];
  always @(posedge clk)
    level2_d1[19] <= level2[19];
  always @(posedge clk)
    level2_d1[20] <= level2[20];
  always @(posedge clk)
    level2_d1[21] <= level2[21];
  always @(posedge clk)
    ps_d1[0] <= s[0];
  always @(posedge clk)
    ps_d1[1] <= s[1];
  always @(posedge clk)
    ps_d1[2] <= s[2];
  always @(posedge clk)
    ps_d1[3] <= s[3];
  always @(posedge clk)
    ps_d2 <= ps_d1[0];
  always @(posedge clk)
    stk4_d1 <= stk4;
  always @(posedge clk)
    level4_d1[0] <= level4[0];
  always @(posedge clk)
    level4_d1[1] <= level4[1];
  always @(posedge clk)
    level4_d1[2] <= level4[2];
  always @(posedge clk)
    level4_d1[3] <= level4[3];
  always @(posedge clk)
    level4_d1[4] <= level4[4];
  always @(posedge clk)
    level4_d1[5] <= level4[5];
  always @(posedge clk)
    level4_d1[6] <= level4[6];
  always @(posedge clk)
    level4_d1[7] <= level4[7];
  always @(posedge clk)
    level3_d1[0] <= level3[0];
  always @(posedge clk)
    level3_d1[1] <= level3[1];
  always @(posedge clk)
    level3_d1[2] <= level3[2];
  always @(posedge clk)
    level3_d1[3] <= level3[3];
  always @(posedge clk)
    stk1_d1 <= stk1;
  always @(posedge clk)
    level1_d1 <= level1[0];
  always @(posedge clk)
    if (s[2]) level2_d1[22] <= 1'h0;
    else level2_d1[22] <= level3[22];
  always @(posedge clk)
    if (s[2]) level2_d1[23] <= 1'h0;
    else level2_d1[23] <= level3[23];
  always @(posedge clk)
    if (s[2]) level2_d1[24] <= 1'h0;
    else level2_d1[24] <= level3[24];
  always @(posedge clk)
    if (s[2]) level2_d1[25] <= 1'h0;
    else level2_d1[25] <= level3[25];
  assign level0 = r;
  assign level5 = { x, 2'h0 };
  assign ps = s;
  assign stk = sticky;
  assign stk0 = sticky;
  assign xpadded = { x, 2'h0 };
endmodule

module top_module(clk, X, Y, R);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:569.20-569.21" *)
  wire [1:0] \192.A ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:571.28-571.29" *)
  wire [5:0] \192.B ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:583.28-583.35" *)
  (* unused_bits = "2 5" *)
  wire [5:0] \192.B_AND_S ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:589.23-589.33" *)
  (* unused_bits = "1" *)
  wire [2:0] \192.B_OR[0].B_AND_BITS ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:589.23-589.33" *)
  (* unused_bits = "2" *)
  wire [2:0] \192.B_OR[1].B_AND_BITS ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:573.22-573.23" *)
  (* unused_bits = "0 1 2" *)
  wire [2:0] \192.S ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:575.21-575.22" *)
  wire [1:0] \192.Y ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:578.19-578.22" *)
  (* unused_bits = "0 1" *)
  wire [1:0] \192.Y_B ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:569.20-569.21" *)
  wire [1:0] \323.A ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:571.28-571.29" *)
  wire [5:0] \323.B ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:583.28-583.35" *)
  (* unused_bits = "2 5" *)
  wire [5:0] \323.B_AND_S ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:589.23-589.33" *)
  (* unused_bits = "1" *)
  wire [2:0] \323.B_OR[0].B_AND_BITS ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:589.23-589.33" *)
  (* unused_bits = "2" *)
  wire [2:0] \323.B_OR[1].B_AND_BITS ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:573.22-573.23" *)
  (* unused_bits = "0 1 2" *)
  wire [2:0] \323.S ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:575.21-575.22" *)
  wire [1:0] \323.Y ;
  (* force_downto = 32'd1 *)
  (* src = "/opt/oss-cad-suite/lib/../share/yosys/techmap.v:578.19-578.22" *)
  (* unused_bits = "0 1" *)
  wire [1:0] \323.Y_B ;
  output [33:0] R;
  wire [33:0] R;
  input [33:0] X;
  wire [33:0] X;
  input [33:0] Y;
  wire [33:0] Y;
  wire cinsigadd;
  input clk;
  wire clk;
  wire [33:0] computedr;
  wire effsub;
  reg effsub_d1;
  reg effsub_d2;
  reg effsub_d3;
  reg effsub_d4;
  reg effsub_d5;
  reg effsub_d6;
  reg effsub_d7;
  reg effsub_d8;
  wire [26:0] effsubvector;
  wire [26:0] effsubvector_d1;
  wire eqdiffsign;
  reg eqdiffsign_d1;
  reg eqdiffsign_d2;
  wire [32:0] excexpfracx;
  wire [32:0] excexpfracy;
  wire [1:0] excr;
  wire [1:0] excrt;
  wire [1:0] excrt2;
  reg [1:0] excrt2_d1;
  reg [1:0] excrt_d1;
  reg [1:0] excrt_d2;
  reg [1:0] excrt_d3;
  reg [1:0] excrt_d4;
  reg [1:0] excrt_d5;
  reg [1:0] excrt_d6;
  reg [1:0] excrt_d7;
  reg [1:0] excrt_d8;
  wire [1:0] excx;
  wire [1:0] excy;
  wire [1:0] excy_d1;
  wire [3:0] exexpexc;
  wire [7:0] expdiff;
  reg [7:0] expdiff_d1;
  wire [33:0] expfrac;
  wire [7:0] expr;
  reg [7:0] expr_d1;
  wire [7:0] expx;
  reg [7:0] expx_d1;
  wire [8:0] extendedexpinc;
  reg [8:0] extendedexpinc_d1;
  reg [8:0] extendedexpinc_d2;
  reg [8:0] extendedexpinc_d3;
  reg [8:0] extendedexpinc_d4;
  reg [8:0] extendedexpinc_d5;
  reg [8:0] extendedexpinc_d6;
  wire [26:0] \fracadder:235 ;
  wire [26:0] fracaddresult;
  wire [22:0] fracr;
  reg [22:0] fracr_d1;
  wire [27:0] fracsticky;
  wire [24:0] fracxpad;
  wire [23:0] fracy;
  wire [26:0] fracypad;
  wire [26:0] fracypadxorop;
  wire lsb;
  wire [4:0] \lzcandshifter:239 ;
  (* unused_bits = "27" *)
  wire [27:0] \lzcandshifter:240 ;
  wire needtoround;
  wire [33:0] newx;
  (* unused_bits = "23 24 25 26 27 28 29 30" *)
  wire [33:0] newy;
  reg [22:0] newy_d1;
  wire [4:0] nzerosnew;
  wire [25:0] \rightshiftercomponent:209 ;
  wire \rightshiftercomponent:210 ;
  wire rnd;
  (* unused_bits = "0" *)
  wire [33:0] roundedexpfrac;
  (* unused_bits = "0" *)
  wire [33:0] \roundingadder:278 ;
  (* unused_bits = "27" *)
  wire [27:0] shiftedfrac;
  wire [25:0] shiftedfracy;
  wire [4:0] shiftval;
  reg signr2_d1;
  reg signr2_d2;
  reg signr_d1;
  reg signr_d2;
  reg signr_d3;
  reg signr_d4;
  reg signr_d5;
  reg signr_d6;
  wire signx;
  reg signx_d1;
  wire signy;
  wire signy_d1;
  wire sticky;
  reg sticky_d1;
  wire [5:0] sxsyexnxy;
  wire [5:0] sxsyexnxy_d1;
  wire [9:0] updatedexp;
  wire [1:0] upexc;
  assign extendedexpinc[0] = ~expx_d1[0];
  assign updatedexp[0] = extendedexpinc_d6[0] ^ nzerosnew[0];
  assign _0002_ = ~(extendedexpinc_d6[7] | extendedexpinc_d6[6]);
  assign _0003_ = ~extendedexpinc_d6[5];
  assign _0004_ = extendedexpinc_d6[4] & ~(nzerosnew[4]);
  assign _0005_ = _0003_ & ~(_0004_);
  assign _0006_ = _0002_ & ~(_0005_);
  assign _0007_ = _0002_ & ~(_0006_);
  assign _0008_ = extendedexpinc_d6[4] ^ nzerosnew[4];
  assign _0009_ = _0003_ & ~(_0008_);
  assign _0010_ = _0009_ & _0002_;
  assign _0011_ = nzerosnew[3] | ~(extendedexpinc_d6[3]);
  assign _0012_ = extendedexpinc_d6[3] ^ nzerosnew[3];
  assign _0013_ = nzerosnew[2] | ~(extendedexpinc_d6[2]);
  assign _0014_ = ~(_0013_ | _0012_);
  assign _0015_ = _0011_ & ~(_0014_);
  assign _0016_ = extendedexpinc_d6[2] ^ nzerosnew[2];
  assign _0017_ = ~(_0016_ | _0012_);
  assign _0018_ = nzerosnew[1] | ~(extendedexpinc_d6[1]);
  assign _0019_ = extendedexpinc_d6[1] ^ nzerosnew[1];
  assign _0020_ = nzerosnew[0] & ~(extendedexpinc_d6[0]);
  assign _0021_ = ~(_0020_ | _0019_);
  assign _0022_ = _0018_ & ~(_0021_);
  assign _0023_ = _0017_ & ~(_0022_);
  assign _0024_ = _0015_ & ~(_0023_);
  assign _0025_ = _0010_ & ~(_0024_);
  assign _0026_ = _0007_ & ~(_0025_);
  assign updatedexp[9] = _0026_ & ~(extendedexpinc_d6[8]);
  assign fracy[23] = sxsyexnxy_d1[1] | sxsyexnxy_d1[0];
  assign _0027_ = ~(nzerosnew[0] & nzerosnew[1]);
  assign _0028_ = ~(nzerosnew[2] & nzerosnew[3]);
  assign _0029_ = _0028_ | _0027_;
  assign eqdiffsign = nzerosnew[4] & ~(_0029_);
  assign _0030_ = expdiff_d1[6] | expdiff_d1[5];
  assign _0031_ = expdiff_d1[4] & expdiff_d1[3];
  assign _0032_ = expdiff_d1[2] | expdiff_d1[1];
  assign _0033_ = _0031_ & ~(_0032_);
  assign _0034_ = _0031_ & ~(_0033_);
  assign _0035_ = _0034_ | _0030_;
  assign _0036_ = _0035_ | expdiff_d1[7];
  assign shiftval[0] = expdiff_d1[0] & ~(_0036_);
  assign shiftval[1] = _0036_ | expdiff_d1[1];
  assign shiftval[2] = expdiff_d1[2] & ~(_0036_);
  assign shiftval[3] = _0036_ | expdiff_d1[3];
  assign shiftval[4] = _0036_ | expdiff_d1[4];
  assign _0037_ = ~(excrt_d8[0] & excrt_d8[1]);
  assign _0038_ = ~(eqdiffsign_d2 & effsub_d8);
  assign _0039_ = _0037_ & ~(_0038_);
  assign R[32] = excrt2_d1[0] & ~(_0039_);
  assign R[33] = excrt2_d1[1] & ~(_0039_);
  assign _0040_ = sxsyexnxy_d1[1] | ~(sxsyexnxy_d1[0]);
  assign _0041_ = sxsyexnxy_d1[3] | ~(sxsyexnxy_d1[2]);
  assign _0042_ = ~(_0041_ | _0040_);
  assign _0043_ = ~(signx_d1 | sxsyexnxy_d1[4]);
  assign _0044_ = _0043_ & _0042_;
  assign _0045_ = sxsyexnxy_d1[4] & ~(signx_d1);
  assign _0046_ = _0045_ & _0042_;
  assign _0047_ = ~(_0046_ | _0044_);
  assign _0048_ = signx_d1 & ~(sxsyexnxy_d1[4]);
  assign _0049_ = _0048_ & _0042_;
  assign _0050_ = _0047_ & ~(_0049_);
  assign _0051_ = signx_d1 & sxsyexnxy_d1[4];
  assign _0052_ = _0051_ & _0042_;
  assign _0053_ = _0050_ & ~(_0052_);
  assign _0054_ = _0041_ | fracy[23];
  assign _0055_ = _0043_ & ~(_0054_);
  assign _0056_ = _0053_ & ~(_0055_);
  assign _0057_ = _0045_ & ~(_0054_);
  assign _0058_ = _0056_ & ~(_0057_);
  assign _0059_ = _0048_ & ~(_0054_);
  assign _0060_ = _0058_ & ~(_0059_);
  assign _0061_ = _0051_ & ~(_0054_);
  assign _0062_ = _0060_ & ~(_0061_);
  assign _0063_ = sxsyexnxy_d1[2] | sxsyexnxy_d1[3];
  assign _0064_ = _0063_ | _0040_;
  assign _0065_ = _0043_ & ~(_0064_);
  assign _0066_ = _0062_ & ~(_0065_);
  assign _0067_ = _0045_ & ~(_0064_);
  assign _0068_ = _0066_ & ~(_0067_);
  assign _0069_ = _0048_ & ~(_0064_);
  assign _0070_ = _0068_ & ~(_0069_);
  assign _0071_ = _0051_ & ~(_0064_);
  assign _0072_ = _0070_ & ~(_0071_);
  assign _0073_ = _0063_ | fracy[23];
  assign _0074_ = _0043_ & ~(_0073_);
  assign _0075_ = _0045_ & ~(_0073_);
  assign _0076_ = _0075_ | _0074_;
  assign _0077_ = _0048_ & ~(_0073_);
  assign _0078_ = _0077_ | _0076_;
  assign _0079_ = _0051_ & ~(_0073_);
  assign _0080_ = _0079_ | _0078_;
  assign _0081_ = _0072_ & ~(_0080_);
  assign _0082_ = sxsyexnxy_d1[0] | ~(sxsyexnxy_d1[1]);
  assign _0083_ = sxsyexnxy_d1[2] | ~(sxsyexnxy_d1[3]);
  assign _0084_ = _0083_ | _0082_;
  assign _0085_ = _0051_ & ~(_0084_);
  assign _0086_ = _0043_ & ~(_0084_);
  assign _0087_ = _0086_ | _0085_;
  assign _0088_ = _0083_ | fracy[23];
  assign _0089_ = _0043_ & ~(_0088_);
  assign _0090_ = _0089_ | _0087_;
  assign _0091_ = _0045_ & ~(_0088_);
  assign _0092_ = _0091_ | _0090_;
  assign _0093_ = _0048_ & ~(_0088_);
  assign _0094_ = _0093_ | _0092_;
  assign _0095_ = _0051_ & ~(_0088_);
  assign _0096_ = _0095_ | _0094_;
  assign _0097_ = _0082_ | _0063_;
  assign _0098_ = _0043_ & ~(_0097_);
  assign _0099_ = _0098_ | _0096_;
  assign _0100_ = _0045_ & ~(_0097_);
  assign _0101_ = _0100_ | _0099_;
  assign _0102_ = _0048_ & ~(_0097_);
  assign _0103_ = _0102_ | _0101_;
  assign _0104_ = _0051_ & ~(_0097_);
  assign _0105_ = _0104_ | _0103_;
  assign _0106_ = _0083_ | _0040_;
  assign _0107_ = _0043_ & ~(_0106_);
  assign _0108_ = _0107_ | _0105_;
  assign _0109_ = _0045_ & ~(_0106_);
  assign _0110_ = _0109_ | _0108_;
  assign _0111_ = _0048_ & ~(_0106_);
  assign _0112_ = _0111_ | _0110_;
  assign _0113_ = _0051_ & ~(_0106_);
  assign _0114_ = _0113_ | _0112_;
  assign _0115_ = _0082_ | _0041_;
  assign _0116_ = _0043_ & ~(_0115_);
  assign _0117_ = _0116_ | _0114_;
  assign _0118_ = _0045_ & ~(_0115_);
  assign _0119_ = _0118_ | _0117_;
  assign _0120_ = _0048_ & ~(_0115_);
  assign _0121_ = _0120_ | _0119_;
  assign _0122_ = _0051_ & ~(_0115_);
  assign _0123_ = _0122_ | _0121_;
  assign _0124_ = _0081_ & ~(_0123_);
  assign excrt[0] = _0124_ | ~(_0072_);
  assign excrt[1] = _0123_ | _0081_;
  assign _0125_ = excrt_d7[0] & ~(excrt_d7[1]);
  assign _0126_ = ~(roundedexpfrac[32] | roundedexpfrac[33]);
  assign _0127_ = _0126_ & _0125_;
  assign _0128_ = ~(excrt_d7[0] | excrt_d7[1]);
  assign _0129_ = _0128_ & _0126_;
  assign _0130_ = roundedexpfrac[32] & ~(roundedexpfrac[33]);
  assign _0131_ = _0130_ & _0128_;
  assign _0132_ = _0131_ | _0129_;
  assign _0133_ = roundedexpfrac[33] & ~(roundedexpfrac[32]);
  assign _0134_ = _0133_ & _0128_;
  assign _0135_ = _0134_ | _0132_;
  assign _0136_ = roundedexpfrac[32] & roundedexpfrac[33];
  assign _0137_ = _0136_ & _0128_;
  assign _0138_ = _0137_ | _0135_;
  assign _0139_ = _0133_ & _0125_;
  assign _0140_ = _0139_ | _0138_;
  assign _0141_ = _0136_ & _0125_;
  assign _0142_ = ~(_0141_ | _0140_);
  assign _0143_ = _0142_ & ~(_0127_);
  assign _0144_ = excrt_d7[0] | ~(excrt_d7[1]);
  assign _0145_ = _0126_ & ~(_0144_);
  assign _0146_ = _0130_ & ~(_0144_);
  assign _0147_ = _0146_ | _0145_;
  assign _0148_ = _0133_ & ~(_0144_);
  assign _0149_ = _0148_ | _0147_;
  assign _0150_ = _0136_ & ~(_0144_);
  assign _0151_ = _0150_ | _0149_;
  assign _0152_ = _0130_ & _0125_;
  assign _0153_ = _0152_ | _0151_;
  assign _0154_ = _0143_ & ~(_0153_);
  assign excrt2[0] = _0154_ | _0127_;
  assign excrt2[1] = _0153_ | _0143_;
  assign _0155_ = Y[33] | ~(X[33]);
  assign _0156_ = ~(X[33] ^ Y[33]);
  assign _0157_ = Y[32] | ~(X[32]);
  assign _0158_ = ~(X[32] ^ Y[32]);
  assign _0159_ = Y[30] | ~(X[30]);
  assign _0160_ = _0158_ & ~(_0159_);
  assign _0161_ = _0157_ & ~(_0160_);
  assign _0162_ = X[30] ^ Y[30];
  assign _0163_ = _0158_ & ~(_0162_);
  assign _0164_ = Y[29] | ~(X[29]);
  assign _0165_ = X[29] ^ Y[29];
  assign _0166_ = Y[28] | ~(X[28]);
  assign _0167_ = ~(_0166_ | _0165_);
  assign _0168_ = _0164_ & ~(_0167_);
  assign _0169_ = _0163_ & ~(_0168_);
  assign _0170_ = _0161_ & ~(_0169_);
  assign _0171_ = X[28] ^ Y[28];
  assign _0172_ = _0171_ | _0165_;
  assign _0173_ = _0163_ & ~(_0172_);
  assign _0174_ = Y[27] | ~(X[27]);
  assign _0175_ = X[27] ^ Y[27];
  assign _0176_ = Y[26] | ~(X[26]);
  assign _0177_ = ~(_0176_ | _0175_);
  assign _0178_ = _0174_ & ~(_0177_);
  assign _0179_ = X[26] ^ Y[26];
  assign _0180_ = ~(_0179_ | _0175_);
  assign _0181_ = Y[25] | ~(X[25]);
  assign _0182_ = X[25] ^ Y[25];
  assign _0183_ = Y[24] | ~(X[24]);
  assign _0184_ = ~(_0183_ | _0182_);
  assign _0185_ = _0181_ & ~(_0184_);
  assign _0186_ = _0180_ & ~(_0185_);
  assign _0187_ = _0178_ & ~(_0186_);
  assign _0188_ = _0173_ & ~(_0187_);
  assign _0189_ = _0170_ & ~(_0188_);
  assign _0190_ = X[24] ^ Y[24];
  assign _0191_ = ~(_0190_ | _0182_);
  assign _0192_ = ~(_0191_ & _0180_);
  assign _0193_ = _0173_ & ~(_0192_);
  assign _0194_ = Y[23] | ~(X[23]);
  assign _0195_ = ~(X[23] ^ Y[23]);
  assign _0196_ = Y[22] | ~(X[22]);
  assign _0197_ = _0195_ & ~(_0196_);
  assign _0198_ = _0194_ & ~(_0197_);
  assign _0199_ = X[22] ^ Y[22];
  assign _0200_ = _0195_ & ~(_0199_);
  assign _0201_ = Y[21] | ~(X[21]);
  assign _0202_ = X[21] ^ Y[21];
  assign _0203_ = X[20] & ~(Y[20]);
  assign _0204_ = _0203_ & ~(_0202_);
  assign _0205_ = _0201_ & ~(_0204_);
  assign _0206_ = _0200_ & ~(_0205_);
  assign _0207_ = _0198_ & ~(_0206_);
  assign _0208_ = X[20] ^ Y[20];
  assign _0209_ = _0208_ | _0202_;
  assign _0210_ = _0200_ & ~(_0209_);
  assign _0211_ = Y[19] | ~(X[19]);
  assign _0212_ = ~(X[19] ^ Y[19]);
  assign _0213_ = Y[18] | ~(X[18]);
  assign _0214_ = _0212_ & ~(_0213_);
  assign _0215_ = _0211_ & ~(_0214_);
  assign _0216_ = X[18] ^ Y[18];
  assign _0217_ = _0212_ & ~(_0216_);
  assign _0218_ = Y[17] | ~(X[17]);
  assign _0219_ = X[17] ^ Y[17];
  assign _0220_ = X[16] & ~(Y[16]);
  assign _0221_ = _0220_ & ~(_0219_);
  assign _0222_ = _0218_ & ~(_0221_);
  assign _0223_ = _0217_ & ~(_0222_);
  assign _0224_ = _0215_ & ~(_0223_);
  assign _0225_ = _0210_ & ~(_0224_);
  assign _0226_ = _0207_ & ~(_0225_);
  assign _0227_ = _0193_ & ~(_0226_);
  assign _0228_ = _0189_ & ~(_0227_);
  assign _0229_ = X[16] ^ Y[16];
  assign _0230_ = ~(_0229_ | _0219_);
  assign _0231_ = _0230_ & _0217_;
  assign _0232_ = ~(_0231_ & _0210_);
  assign _0233_ = _0193_ & ~(_0232_);
  assign _0234_ = Y[15] | ~(X[15]);
  assign _0235_ = ~(X[15] ^ Y[15]);
  assign _0236_ = Y[14] | ~(X[14]);
  assign _0237_ = _0235_ & ~(_0236_);
  assign _0238_ = _0234_ & ~(_0237_);
  assign _0239_ = X[14] ^ Y[14];
  assign _0240_ = _0235_ & ~(_0239_);
  assign _0241_ = Y[13] | ~(X[13]);
  assign _0242_ = X[13] ^ Y[13];
  assign _0243_ = X[12] & ~(Y[12]);
  assign _0244_ = _0243_ & ~(_0242_);
  assign _0245_ = _0241_ & ~(_0244_);
  assign _0246_ = _0240_ & ~(_0245_);
  assign _0247_ = _0238_ & ~(_0246_);
  assign _0248_ = X[12] ^ Y[12];
  assign _0249_ = _0248_ | _0242_;
  assign _0250_ = _0240_ & ~(_0249_);
  assign _0251_ = Y[11] | ~(X[11]);
  assign _0252_ = ~(X[11] ^ Y[11]);
  assign _0253_ = Y[10] | ~(X[10]);
  assign _0254_ = _0252_ & ~(_0253_);
  assign _0255_ = _0251_ & ~(_0254_);
  assign _0256_ = X[10] ^ Y[10];
  assign _0257_ = _0252_ & ~(_0256_);
  assign _0258_ = Y[9] | ~(X[9]);
  assign _0259_ = X[9] ^ Y[9];
  assign _0260_ = X[8] & ~(Y[8]);
  assign _0261_ = _0260_ & ~(_0259_);
  assign _0262_ = _0258_ & ~(_0261_);
  assign _0263_ = _0257_ & ~(_0262_);
  assign _0264_ = _0255_ & ~(_0263_);
  assign _0265_ = _0250_ & ~(_0264_);
  assign _0266_ = _0247_ & ~(_0265_);
  assign _0267_ = X[8] ^ Y[8];
  assign _0268_ = ~(_0267_ | _0259_);
  assign _0269_ = ~(_0268_ & _0257_);
  assign _0270_ = _0250_ & ~(_0269_);
  assign _0271_ = Y[7] | ~(X[7]);
  assign _0272_ = ~(X[7] ^ Y[7]);
  assign _0273_ = Y[6] | ~(X[6]);
  assign _0274_ = _0272_ & ~(_0273_);
  assign _0275_ = _0271_ & ~(_0274_);
  assign _0276_ = X[6] ^ Y[6];
  assign _0277_ = _0272_ & ~(_0276_);
  assign _0278_ = Y[5] | ~(X[5]);
  assign _0279_ = X[5] ^ Y[5];
  assign _0280_ = X[4] & ~(Y[4]);
  assign _0281_ = _0280_ & ~(_0279_);
  assign _0282_ = _0278_ & ~(_0281_);
  assign _0283_ = _0277_ & ~(_0282_);
  assign _0284_ = _0275_ & ~(_0283_);
  assign _0285_ = X[4] ^ Y[4];
  assign _0286_ = _0285_ | _0279_;
  assign _0287_ = _0277_ & ~(_0286_);
  assign _0288_ = Y[3] | ~(X[3]);
  assign _0289_ = ~(X[3] ^ Y[3]);
  assign _0290_ = Y[2] | ~(X[2]);
  assign _0291_ = _0289_ & ~(_0290_);
  assign _0292_ = _0288_ & ~(_0291_);
  assign _0293_ = X[2] ^ Y[2];
  assign _0294_ = _0289_ & ~(_0293_);
  assign _0295_ = Y[1] | ~(X[1]);
  assign _0296_ = ~(X[1] ^ Y[1]);
  assign _0297_ = Y[0] & ~(X[0]);
  assign _0298_ = _0296_ & ~(_0297_);
  assign _0299_ = _0295_ & ~(_0298_);
  assign _0300_ = _0294_ & ~(_0299_);
  assign _0301_ = _0292_ & ~(_0300_);
  assign _0302_ = _0287_ & ~(_0301_);
  assign _0303_ = _0284_ & ~(_0302_);
  assign _0304_ = _0270_ & ~(_0303_);
  assign _0305_ = _0266_ & ~(_0304_);
  assign _0306_ = _0233_ & ~(_0305_);
  assign _0307_ = _0228_ & ~(_0306_);
  assign _0308_ = _0156_ & ~(_0307_);
  assign _0309_ = _0155_ & ~(_0308_);
  assign expdiff[0] = X[23] ^ Y[23];
  assign _0310_ = X[23] & ~(Y[23]);
  assign _0311_ = _0310_ ^ _0190_;
  assign _0312_ = Y[23] & ~(X[23]);
  assign _0313_ = _0312_ ^ _0190_;
  assign expdiff[1] = _0309_ ? _0311_ : _0313_;
  assign _0314_ = Y[24] & ~(X[24]);
  assign _0315_ = ~(_0310_ | _0190_);
  assign _0316_ = ~(_0315_ | _0314_);
  assign _0317_ = _0316_ ^ _0182_;
  assign _0318_ = ~(_0312_ | _0190_);
  assign _0319_ = _0183_ & ~(_0318_);
  assign _0320_ = _0319_ ^ _0182_;
  assign expdiff[2] = _0309_ ? _0317_ : _0320_;
  assign _0321_ = X[25] | ~(Y[25]);
  assign _0322_ = ~_0182_;
  assign _0323_ = _0322_ & ~(_0316_);
  assign _0324_ = _0321_ & ~(_0323_);
  assign _0325_ = _0324_ ^ _0179_;
  assign _0326_ = _0322_ & ~(_0319_);
  assign _0327_ = _0181_ & ~(_0326_);
  assign _0328_ = _0327_ ^ _0179_;
  assign expdiff[3] = _0309_ ? _0325_ : _0328_;
  assign _0329_ = Y[26] & ~(X[26]);
  assign _0330_ = ~(_0321_ | _0179_);
  assign _0331_ = ~(_0330_ | _0329_);
  assign _0332_ = _0182_ | _0179_;
  assign _0333_ = ~(_0332_ | _0316_);
  assign _0334_ = _0331_ & ~(_0333_);
  assign _0335_ = _0334_ ^ _0175_;
  assign _0336_ = ~(_0181_ | _0179_);
  assign _0337_ = _0176_ & ~(_0336_);
  assign _0338_ = ~(_0332_ | _0319_);
  assign _0339_ = _0337_ & ~(_0338_);
  assign _0340_ = _0339_ ^ _0175_;
  assign expdiff[4] = _0309_ ? _0335_ : _0340_;
  assign _0341_ = X[27] | ~(Y[27]);
  assign _0342_ = ~_0175_;
  assign _0343_ = _0342_ & ~(_0334_);
  assign _0344_ = _0341_ & ~(_0343_);
  assign _0345_ = _0344_ ^ _0171_;
  assign _0346_ = _0342_ & ~(_0339_);
  assign _0347_ = _0174_ & ~(_0346_);
  assign _0348_ = _0347_ ^ _0171_;
  assign expdiff[5] = _0309_ ? _0345_ : _0348_;
  assign _0349_ = X[28] | ~(Y[28]);
  assign _0350_ = ~(_0341_ | _0171_);
  assign _0351_ = _0349_ & ~(_0350_);
  assign _0352_ = _0175_ | _0171_;
  assign _0353_ = ~(_0352_ | _0334_);
  assign _0354_ = _0351_ & ~(_0353_);
  assign _0355_ = _0354_ ^ _0165_;
  assign _0356_ = ~(_0174_ | _0171_);
  assign _0357_ = _0166_ & ~(_0356_);
  assign _0358_ = ~(_0352_ | _0339_);
  assign _0359_ = _0357_ & ~(_0358_);
  assign _0360_ = _0359_ ^ _0165_;
  assign expdiff[6] = _0309_ ? _0355_ : _0360_;
  assign _0361_ = X[29] | ~(Y[29]);
  assign _0362_ = ~_0165_;
  assign _0363_ = _0362_ & ~(_0354_);
  assign _0364_ = _0361_ & ~(_0363_);
  assign _0365_ = _0364_ ^ _0162_;
  assign _0366_ = _0362_ & ~(_0359_);
  assign _0367_ = _0164_ & ~(_0366_);
  assign _0368_ = _0367_ ^ _0162_;
  assign expdiff[7] = _0309_ ? _0365_ : _0368_;
  assign newx[0] = _0309_ ? Y[0] : X[0];
  assign newx[1] = _0309_ ? Y[1] : X[1];
  assign newx[2] = _0309_ ? Y[2] : X[2];
  assign newx[3] = _0309_ ? Y[3] : X[3];
  assign newx[4] = _0309_ ? Y[4] : X[4];
  assign newx[5] = _0309_ ? Y[5] : X[5];
  assign newx[6] = _0309_ ? Y[6] : X[6];
  assign newx[7] = _0309_ ? Y[7] : X[7];
  assign newx[8] = _0309_ ? Y[8] : X[8];
  assign newx[9] = _0309_ ? Y[9] : X[9];
  assign newx[10] = _0309_ ? Y[10] : X[10];
  assign newx[11] = _0309_ ? Y[11] : X[11];
  assign newx[12] = _0309_ ? Y[12] : X[12];
  assign newx[13] = _0309_ ? Y[13] : X[13];
  assign newx[14] = _0309_ ? Y[14] : X[14];
  assign newx[15] = _0309_ ? Y[15] : X[15];
  assign newx[16] = _0309_ ? Y[16] : X[16];
  assign newx[17] = _0309_ ? Y[17] : X[17];
  assign newx[18] = _0309_ ? Y[18] : X[18];
  assign newx[19] = _0309_ ? Y[19] : X[19];
  assign newx[20] = _0309_ ? Y[20] : X[20];
  assign newx[21] = _0309_ ? Y[21] : X[21];
  assign newx[22] = _0309_ ? Y[22] : X[22];
  assign newx[23] = _0309_ ? Y[23] : X[23];
  assign newx[24] = _0309_ ? Y[24] : X[24];
  assign newx[25] = _0309_ ? Y[25] : X[25];
  assign newx[26] = _0309_ ? Y[26] : X[26];
  assign newx[27] = _0309_ ? Y[27] : X[27];
  assign newx[28] = _0309_ ? Y[28] : X[28];
  assign newx[29] = _0309_ ? Y[29] : X[29];
  assign newx[30] = _0309_ ? Y[30] : X[30];
  assign signx = _0309_ ? Y[31] : X[31];
  assign newx[32] = _0309_ ? Y[32] : X[32];
  assign newx[33] = X[33] | Y[33];
  assign newy[0] = _0309_ ? X[0] : Y[0];
  assign newy[1] = _0309_ ? X[1] : Y[1];
  assign newy[2] = _0309_ ? X[2] : Y[2];
  assign newy[3] = _0309_ ? X[3] : Y[3];
  assign newy[4] = _0309_ ? X[4] : Y[4];
  assign newy[5] = _0309_ ? X[5] : Y[5];
  assign newy[6] = _0309_ ? X[6] : Y[6];
  assign newy[7] = _0309_ ? X[7] : Y[7];
  assign newy[8] = _0309_ ? X[8] : Y[8];
  assign newy[9] = _0309_ ? X[9] : Y[9];
  assign newy[10] = _0309_ ? X[10] : Y[10];
  assign newy[11] = _0309_ ? X[11] : Y[11];
  assign newy[12] = _0309_ ? X[12] : Y[12];
  assign newy[13] = _0309_ ? X[13] : Y[13];
  assign newy[14] = _0309_ ? X[14] : Y[14];
  assign newy[15] = _0309_ ? X[15] : Y[15];
  assign newy[16] = _0309_ ? X[16] : Y[16];
  assign newy[17] = _0309_ ? X[17] : Y[17];
  assign newy[18] = _0309_ ? X[18] : Y[18];
  assign newy[19] = _0309_ ? X[19] : Y[19];
  assign newy[20] = _0309_ ? X[20] : Y[20];
  assign newy[21] = _0309_ ? X[21] : Y[21];
  assign newy[22] = _0309_ ? X[22] : Y[22];
  assign signy = _0309_ ? X[31] : Y[31];
  assign newy[32] = _0309_ ? X[32] : Y[32];
  assign newy[33] = X[33] & Y[33];
  assign fracy[0] = fracy[23] & newy_d1[0];
  assign fracy[1] = fracy[23] & newy_d1[1];
  assign fracy[2] = fracy[23] & newy_d1[2];
  assign fracy[3] = fracy[23] & newy_d1[3];
  assign fracy[4] = fracy[23] & newy_d1[4];
  assign fracy[5] = fracy[23] & newy_d1[5];
  assign fracy[6] = fracy[23] & newy_d1[6];
  assign fracy[7] = fracy[23] & newy_d1[7];
  assign fracy[8] = fracy[23] & newy_d1[8];
  assign fracy[9] = fracy[23] & newy_d1[9];
  assign fracy[10] = fracy[23] & newy_d1[10];
  assign fracy[11] = fracy[23] & newy_d1[11];
  assign fracy[12] = fracy[23] & newy_d1[12];
  assign fracy[13] = fracy[23] & newy_d1[13];
  assign fracy[14] = fracy[23] & newy_d1[14];
  assign fracy[15] = fracy[23] & newy_d1[15];
  assign fracy[16] = fracy[23] & newy_d1[16];
  assign fracy[17] = fracy[23] & newy_d1[17];
  assign fracy[18] = fracy[23] & newy_d1[18];
  assign fracy[19] = fracy[23] & newy_d1[19];
  assign fracy[20] = fracy[23] & newy_d1[20];
  assign fracy[21] = fracy[23] & newy_d1[21];
  assign fracy[22] = fracy[23] & newy_d1[22];
  assign _0001_ = _0077_ | _0075_;
  assign cinsigadd = effsub_d2 & ~(sticky);
  assign _0369_ = shiftedfrac[1] | shiftedfrac[2];
  assign _0370_ = ~(_0369_ | shiftedfrac[0]);
  assign _0371_ = \lzcandshifter:240 [3] & ~(_0370_);
  assign _0372_ = ~(_0370_ & \lzcandshifter:240 [3]);
  assign _0373_ = \lzcandshifter:240 [4] & ~(_0372_);
  assign needtoround = _0373_ | _0371_;
  assign _0000_ = eqdiffsign & effsub_d6;
  assign fracypadxorop[0] = effsub_d1 ^ \rightshiftercomponent:209 [0];
  assign fracypadxorop[1] = \rightshiftercomponent:209 [1] ^ effsub_d1;
  assign fracypadxorop[2] = \rightshiftercomponent:209 [2] ^ effsub_d1;
  assign fracypadxorop[3] = \rightshiftercomponent:209 [3] ^ effsub_d1;
  assign fracypadxorop[4] = \rightshiftercomponent:209 [4] ^ effsub_d1;
  assign fracypadxorop[5] = \rightshiftercomponent:209 [5] ^ effsub_d1;
  assign fracypadxorop[6] = \rightshiftercomponent:209 [6] ^ effsub_d1;
  assign fracypadxorop[7] = \rightshiftercomponent:209 [7] ^ effsub_d1;
  assign fracypadxorop[8] = \rightshiftercomponent:209 [8] ^ effsub_d1;
  assign fracypadxorop[9] = \rightshiftercomponent:209 [9] ^ effsub_d1;
  assign fracypadxorop[10] = \rightshiftercomponent:209 [10] ^ effsub_d1;
  assign fracypadxorop[11] = \rightshiftercomponent:209 [11] ^ effsub_d1;
  assign fracypadxorop[12] = \rightshiftercomponent:209 [12] ^ effsub_d1;
  assign fracypadxorop[13] = \rightshiftercomponent:209 [13] ^ effsub_d1;
  assign fracypadxorop[14] = \rightshiftercomponent:209 [14] ^ effsub_d1;
  assign fracypadxorop[15] = \rightshiftercomponent:209 [15] ^ effsub_d1;
  assign fracypadxorop[16] = \rightshiftercomponent:209 [16] ^ effsub_d1;
  assign fracypadxorop[17] = \rightshiftercomponent:209 [17] ^ effsub_d1;
  assign fracypadxorop[18] = \rightshiftercomponent:209 [18] ^ effsub_d1;
  assign fracypadxorop[19] = \rightshiftercomponent:209 [19] ^ effsub_d1;
  assign fracypadxorop[20] = \rightshiftercomponent:209 [20] ^ effsub_d1;
  assign fracypadxorop[21] = \rightshiftercomponent:209 [21] ^ effsub_d1;
  assign fracypadxorop[22] = \rightshiftercomponent:209 [22] ^ effsub_d1;
  assign fracypadxorop[23] = \rightshiftercomponent:209 [23] ^ effsub_d1;
  assign fracypadxorop[24] = \rightshiftercomponent:209 [24] ^ effsub_d1;
  assign fracypadxorop[25] = \rightshiftercomponent:209 [25] ^ effsub_d1;
  assign extendedexpinc[1] = expx_d1[1] ^ expx_d1[0];
  assign _0374_ = expx_d1[1] & expx_d1[0];
  assign extendedexpinc[2] = _0374_ ^ expx_d1[2];
  assign _0375_ = _0374_ & expx_d1[2];
  assign extendedexpinc[3] = _0375_ ^ expx_d1[3];
  assign _0376_ = ~(expx_d1[3] & expx_d1[2]);
  assign _0377_ = _0374_ & ~(_0376_);
  assign extendedexpinc[4] = _0377_ ^ expx_d1[4];
  assign _0378_ = _0377_ & expx_d1[4];
  assign extendedexpinc[5] = _0378_ ^ expx_d1[5];
  assign _0379_ = ~(expx_d1[5] & expx_d1[4]);
  assign _0380_ = _0377_ & ~(_0379_);
  assign extendedexpinc[6] = _0380_ ^ expx_d1[6];
  assign _0381_ = _0380_ & expx_d1[6];
  assign extendedexpinc[7] = _0381_ ^ expx_d1[7];
  assign updatedexp[1] = _0020_ ^ _0019_;
  assign updatedexp[2] = _0022_ ^ _0016_;
  assign _0382_ = ~(_0022_ | _0016_);
  assign _0383_ = _0013_ & ~(_0382_);
  assign updatedexp[3] = _0383_ ^ _0012_;
  assign updatedexp[4] = _0024_ ^ _0008_;
  assign _0384_ = _0024_ | _0008_;
  assign _0385_ = _0384_ & ~(_0004_);
  assign updatedexp[5] = _0385_ ^ extendedexpinc_d6[5];
  assign _0386_ = _0009_ & ~(_0024_);
  assign _0387_ = _0005_ & ~(_0386_);
  assign updatedexp[6] = _0387_ ^ extendedexpinc_d6[6];
  assign _0388_ = _0387_ & ~(extendedexpinc_d6[6]);
  assign updatedexp[7] = _0388_ ^ extendedexpinc_d6[7];
  assign updatedexp[8] = _0026_ ^ extendedexpinc_d6[8];
  assign _0389_ = ~(expx_d1[7] & expx_d1[6]);
  assign _0390_ = _0389_ | _0379_;
  assign extendedexpinc[8] = _0377_ & ~(_0390_);
  assign effsub = _0048_ | _0045_;
  always @(posedge clk)
    expdiff_d1[0] <= expdiff[0];
  always @(posedge clk)
    expdiff_d1[1] <= expdiff[1];
  always @(posedge clk)
    expdiff_d1[2] <= expdiff[2];
  always @(posedge clk)
    expdiff_d1[3] <= expdiff[3];
  always @(posedge clk)
    expdiff_d1[4] <= expdiff[4];
  always @(posedge clk)
    expdiff_d1[5] <= expdiff[5];
  always @(posedge clk)
    expdiff_d1[6] <= expdiff[6];
  always @(posedge clk)
    expdiff_d1[7] <= expdiff[7];
  always @(posedge clk)
    newy_d1[0] <= newy[0];
  always @(posedge clk)
    newy_d1[1] <= newy[1];
  always @(posedge clk)
    newy_d1[2] <= newy[2];
  always @(posedge clk)
    newy_d1[3] <= newy[3];
  always @(posedge clk)
    newy_d1[4] <= newy[4];
  always @(posedge clk)
    newy_d1[5] <= newy[5];
  always @(posedge clk)
    newy_d1[6] <= newy[6];
  always @(posedge clk)
    newy_d1[7] <= newy[7];
  always @(posedge clk)
    newy_d1[8] <= newy[8];
  always @(posedge clk)
    newy_d1[9] <= newy[9];
  always @(posedge clk)
    newy_d1[10] <= newy[10];
  always @(posedge clk)
    newy_d1[11] <= newy[11];
  always @(posedge clk)
    newy_d1[12] <= newy[12];
  always @(posedge clk)
    newy_d1[13] <= newy[13];
  always @(posedge clk)
    newy_d1[14] <= newy[14];
  always @(posedge clk)
    newy_d1[15] <= newy[15];
  always @(posedge clk)
    newy_d1[16] <= newy[16];
  always @(posedge clk)
    newy_d1[17] <= newy[17];
  always @(posedge clk)
    newy_d1[18] <= newy[18];
  always @(posedge clk)
    newy_d1[19] <= newy[19];
  always @(posedge clk)
    newy_d1[20] <= newy[20];
  always @(posedge clk)
    newy_d1[21] <= newy[21];
  always @(posedge clk)
    newy_d1[22] <= newy[22];
  always @(posedge clk)
    expx_d1[0] <= newx[23];
  always @(posedge clk)
    expx_d1[1] <= newx[24];
  always @(posedge clk)
    expx_d1[2] <= newx[25];
  always @(posedge clk)
    expx_d1[3] <= newx[26];
  always @(posedge clk)
    expx_d1[4] <= newx[27];
  always @(posedge clk)
    expx_d1[5] <= newx[28];
  always @(posedge clk)
    expx_d1[6] <= newx[29];
  always @(posedge clk)
    expx_d1[7] <= newx[30];
  always @(posedge clk)
    signx_d1 <= signx;
  always @(posedge clk)
    effsub_d1 <= effsub;
  always @(posedge clk)
    effsub_d2 <= effsub_d1;
  always @(posedge clk)
    effsub_d3 <= effsub_d2;
  always @(posedge clk)
    effsub_d4 <= effsub_d3;
  always @(posedge clk)
    effsub_d5 <= effsub_d4;
  always @(posedge clk)
    effsub_d6 <= effsub_d5;
  always @(posedge clk)
    effsub_d7 <= effsub_d6;
  always @(posedge clk)
    effsub_d8 <= effsub_d7;
  reg \sxsyexnxy_d1_reg[0] ;
  always @(posedge clk)
    \sxsyexnxy_d1_reg[0]  <= newy[32];
  assign sxsyexnxy_d1[0] = \sxsyexnxy_d1_reg[0] ;
  reg \sxsyexnxy_d1_reg[1] ;
  always @(posedge clk)
    \sxsyexnxy_d1_reg[1]  <= newy[33];
  assign sxsyexnxy_d1[1] = \sxsyexnxy_d1_reg[1] ;
  reg \sxsyexnxy_d1_reg[2] ;
  always @(posedge clk)
    \sxsyexnxy_d1_reg[2]  <= newx[32];
  assign sxsyexnxy_d1[2] = \sxsyexnxy_d1_reg[2] ;
  reg \sxsyexnxy_d1_reg[3] ;
  always @(posedge clk)
    \sxsyexnxy_d1_reg[3]  <= newx[33];
  assign sxsyexnxy_d1[3] = \sxsyexnxy_d1_reg[3] ;
  reg \sxsyexnxy_d1_reg[4] ;
  always @(posedge clk)
    \sxsyexnxy_d1_reg[4]  <= signy;
  assign sxsyexnxy_d1[4] = \sxsyexnxy_d1_reg[4] ;
  always @(posedge clk)
    excrt_d1[0] <= excrt[0];
  always @(posedge clk)
    excrt_d1[1] <= excrt[1];
  always @(posedge clk)
    excrt_d2[0] <= excrt_d1[0];
  always @(posedge clk)
    excrt_d2[1] <= excrt_d1[1];
  always @(posedge clk)
    excrt_d3[0] <= excrt_d2[0];
  always @(posedge clk)
    excrt_d3[1] <= excrt_d2[1];
  always @(posedge clk)
    excrt_d4[0] <= excrt_d3[0];
  always @(posedge clk)
    excrt_d4[1] <= excrt_d3[1];
  always @(posedge clk)
    excrt_d5[0] <= excrt_d4[0];
  always @(posedge clk)
    excrt_d5[1] <= excrt_d4[1];
  always @(posedge clk)
    excrt_d6[0] <= excrt_d5[0];
  always @(posedge clk)
    excrt_d6[1] <= excrt_d5[1];
  always @(posedge clk)
    excrt_d7[0] <= excrt_d6[0];
  always @(posedge clk)
    excrt_d7[1] <= excrt_d6[1];
  always @(posedge clk)
    excrt_d8[0] <= excrt_d7[0];
  always @(posedge clk)
    excrt_d8[1] <= excrt_d7[1];
  always @(posedge clk)
    signr_d2 <= signr_d1;
  always @(posedge clk)
    signr_d3 <= signr_d2;
  always @(posedge clk)
    signr_d4 <= signr_d3;
  always @(posedge clk)
    signr_d5 <= signr_d4;
  always @(posedge clk)
    signr_d6 <= signr_d5;
  always @(posedge clk)
    sticky_d1 <= sticky;
  always @(posedge clk)
    extendedexpinc_d1[0] <= extendedexpinc[0];
  always @(posedge clk)
    extendedexpinc_d1[1] <= extendedexpinc[1];
  always @(posedge clk)
    extendedexpinc_d1[2] <= extendedexpinc[2];
  always @(posedge clk)
    extendedexpinc_d1[3] <= extendedexpinc[3];
  always @(posedge clk)
    extendedexpinc_d1[4] <= extendedexpinc[4];
  always @(posedge clk)
    extendedexpinc_d1[5] <= extendedexpinc[5];
  always @(posedge clk)
    extendedexpinc_d1[6] <= extendedexpinc[6];
  always @(posedge clk)
    extendedexpinc_d1[7] <= extendedexpinc[7];
  always @(posedge clk)
    extendedexpinc_d1[8] <= extendedexpinc[8];
  always @(posedge clk)
    extendedexpinc_d2[0] <= extendedexpinc_d1[0];
  always @(posedge clk)
    extendedexpinc_d2[1] <= extendedexpinc_d1[1];
  always @(posedge clk)
    extendedexpinc_d2[2] <= extendedexpinc_d1[2];
  always @(posedge clk)
    extendedexpinc_d2[3] <= extendedexpinc_d1[3];
  always @(posedge clk)
    extendedexpinc_d2[4] <= extendedexpinc_d1[4];
  always @(posedge clk)
    extendedexpinc_d2[5] <= extendedexpinc_d1[5];
  always @(posedge clk)
    extendedexpinc_d2[6] <= extendedexpinc_d1[6];
  always @(posedge clk)
    extendedexpinc_d2[7] <= extendedexpinc_d1[7];
  always @(posedge clk)
    extendedexpinc_d2[8] <= extendedexpinc_d1[8];
  always @(posedge clk)
    extendedexpinc_d3[0] <= extendedexpinc_d2[0];
  always @(posedge clk)
    extendedexpinc_d3[1] <= extendedexpinc_d2[1];
  always @(posedge clk)
    extendedexpinc_d3[2] <= extendedexpinc_d2[2];
  always @(posedge clk)
    extendedexpinc_d3[3] <= extendedexpinc_d2[3];
  always @(posedge clk)
    extendedexpinc_d3[4] <= extendedexpinc_d2[4];
  always @(posedge clk)
    extendedexpinc_d3[5] <= extendedexpinc_d2[5];
  always @(posedge clk)
    extendedexpinc_d3[6] <= extendedexpinc_d2[6];
  always @(posedge clk)
    extendedexpinc_d3[7] <= extendedexpinc_d2[7];
  always @(posedge clk)
    extendedexpinc_d3[8] <= extendedexpinc_d2[8];
  always @(posedge clk)
    extendedexpinc_d4[0] <= extendedexpinc_d3[0];
  always @(posedge clk)
    extendedexpinc_d4[1] <= extendedexpinc_d3[1];
  always @(posedge clk)
    extendedexpinc_d4[2] <= extendedexpinc_d3[2];
  always @(posedge clk)
    extendedexpinc_d4[3] <= extendedexpinc_d3[3];
  always @(posedge clk)
    extendedexpinc_d4[4] <= extendedexpinc_d3[4];
  always @(posedge clk)
    extendedexpinc_d4[5] <= extendedexpinc_d3[5];
  always @(posedge clk)
    extendedexpinc_d4[6] <= extendedexpinc_d3[6];
  always @(posedge clk)
    extendedexpinc_d4[7] <= extendedexpinc_d3[7];
  always @(posedge clk)
    extendedexpinc_d4[8] <= extendedexpinc_d3[8];
  always @(posedge clk)
    extendedexpinc_d5[0] <= extendedexpinc_d4[0];
  always @(posedge clk)
    extendedexpinc_d5[1] <= extendedexpinc_d4[1];
  always @(posedge clk)
    extendedexpinc_d5[2] <= extendedexpinc_d4[2];
  always @(posedge clk)
    extendedexpinc_d5[3] <= extendedexpinc_d4[3];
  always @(posedge clk)
    extendedexpinc_d5[4] <= extendedexpinc_d4[4];
  always @(posedge clk)
    extendedexpinc_d5[5] <= extendedexpinc_d4[5];
  always @(posedge clk)
    extendedexpinc_d5[6] <= extendedexpinc_d4[6];
  always @(posedge clk)
    extendedexpinc_d5[7] <= extendedexpinc_d4[7];
  always @(posedge clk)
    extendedexpinc_d5[8] <= extendedexpinc_d4[8];
  always @(posedge clk)
    extendedexpinc_d6[0] <= extendedexpinc_d5[0];
  always @(posedge clk)
    extendedexpinc_d6[1] <= extendedexpinc_d5[1];
  always @(posedge clk)
    extendedexpinc_d6[2] <= extendedexpinc_d5[2];
  always @(posedge clk)
    extendedexpinc_d6[3] <= extendedexpinc_d5[3];
  always @(posedge clk)
    extendedexpinc_d6[4] <= extendedexpinc_d5[4];
  always @(posedge clk)
    extendedexpinc_d6[5] <= extendedexpinc_d5[5];
  always @(posedge clk)
    extendedexpinc_d6[6] <= extendedexpinc_d5[6];
  always @(posedge clk)
    extendedexpinc_d6[7] <= extendedexpinc_d5[7];
  always @(posedge clk)
    extendedexpinc_d6[8] <= extendedexpinc_d5[8];
  always @(posedge clk)
    eqdiffsign_d1 <= eqdiffsign;
  always @(posedge clk)
    eqdiffsign_d2 <= eqdiffsign_d1;
  always @(posedge clk)
    fracr_d1[0] <= roundedexpfrac[1];
  always @(posedge clk)
    fracr_d1[1] <= roundedexpfrac[2];
  always @(posedge clk)
    fracr_d1[2] <= roundedexpfrac[3];
  always @(posedge clk)
    fracr_d1[3] <= roundedexpfrac[4];
  always @(posedge clk)
    fracr_d1[4] <= roundedexpfrac[5];
  always @(posedge clk)
    fracr_d1[5] <= roundedexpfrac[6];
  always @(posedge clk)
    fracr_d1[6] <= roundedexpfrac[7];
  always @(posedge clk)
    fracr_d1[7] <= roundedexpfrac[8];
  always @(posedge clk)
    fracr_d1[8] <= roundedexpfrac[9];
  always @(posedge clk)
    fracr_d1[9] <= roundedexpfrac[10];
  always @(posedge clk)
    fracr_d1[10] <= roundedexpfrac[11];
  always @(posedge clk)
    fracr_d1[11] <= roundedexpfrac[12];
  always @(posedge clk)
    fracr_d1[12] <= roundedexpfrac[13];
  always @(posedge clk)
    fracr_d1[13] <= roundedexpfrac[14];
  always @(posedge clk)
    fracr_d1[14] <= roundedexpfrac[15];
  always @(posedge clk)
    fracr_d1[15] <= roundedexpfrac[16];
  always @(posedge clk)
    fracr_d1[16] <= roundedexpfrac[17];
  always @(posedge clk)
    fracr_d1[17] <= roundedexpfrac[18];
  always @(posedge clk)
    fracr_d1[18] <= roundedexpfrac[19];
  always @(posedge clk)
    fracr_d1[19] <= roundedexpfrac[20];
  always @(posedge clk)
    fracr_d1[20] <= roundedexpfrac[21];
  always @(posedge clk)
    fracr_d1[21] <= roundedexpfrac[22];
  always @(posedge clk)
    fracr_d1[22] <= roundedexpfrac[23];
  always @(posedge clk)
    expr_d1[0] <= roundedexpfrac[24];
  always @(posedge clk)
    expr_d1[1] <= roundedexpfrac[25];
  always @(posedge clk)
    expr_d1[2] <= roundedexpfrac[26];
  always @(posedge clk)
    expr_d1[3] <= roundedexpfrac[27];
  always @(posedge clk)
    expr_d1[4] <= roundedexpfrac[28];
  always @(posedge clk)
    expr_d1[5] <= roundedexpfrac[29];
  always @(posedge clk)
    expr_d1[6] <= roundedexpfrac[30];
  always @(posedge clk)
    expr_d1[7] <= roundedexpfrac[31];
  always @(posedge clk)
    excrt2_d1[0] <= excrt2[0];
  always @(posedge clk)
    excrt2_d1[1] <= excrt2[1];
  always @(posedge clk)
    if (_0001_) signr_d1 <= 1'h0;
    else signr_d1 <= signx_d1;
  always @(posedge clk)
    signr2_d2 <= signr2_d1;
  always @(posedge clk)
    if (_0000_) signr2_d1 <= 1'h0;
    else signr2_d1 <= signr_d6;
  intadder_27_freq500_uid6 fracadder (
    .cin(cinsigadd),
    .clk(clk),
    .r(\fracadder:235 ),
    .x({ 2'h1, newx[22:0], 2'h0 }),
    .y({ effsub_d1, fracypadxorop[25:0] })
  );
  normalizer_z_28_28_28_freq500_uid8 lzcandshifter (
    .clk(clk),
    .count(nzerosnew),
    .r({ \lzcandshifter:240 [27:3], shiftedfrac[2:0] }),
    .x({ \fracadder:235 , sticky_d1 })
  );
  rightshiftersticky24_by_max_26_freq500_uid4 rightshiftercomponent (
    .clk(clk),
    .r(\rightshiftercomponent:209 ),
    .s(shiftval),
    .sticky(sticky),
    .x(fracy)
  );
  intadder_34_freq500_uid11 roundingadder (
    .cin(needtoround),
    .clk(clk),
    .r(roundedexpfrac),
    .x({ updatedexp, \lzcandshifter:240 [26:3] }),
    .y(34'h000000000)
  );
  assign \192.A  = 2'h3;
  assign \192.B  = 6'h24;
  assign { \192.B_AND_S [4:3], \192.B_AND_S [1:0] } = 4'h0;
  assign \192.B_OR[0].B_AND_BITS  = { 1'h0, \192.B_AND_S [2], 1'h0 };
  assign \192.B_OR[1].B_AND_BITS  = { \192.B_AND_S [5], 2'h0 };
  assign \192.S [2:1] = { \192.B_AND_S [5], \192.B_AND_S [2] };
  assign \192.Y  = excrt;
  assign \192.Y_B  = { \192.B_AND_S [5], \192.B_AND_S [2] };
  assign \323.A  = 2'h3;
  assign \323.B  = 6'h24;
  assign { \323.B_AND_S [4:3], \323.B_AND_S [1:0] } = 4'h0;
  assign \323.B_OR[0].B_AND_BITS  = { 1'h0, \323.B_AND_S [2], 1'h0 };
  assign \323.B_OR[1].B_AND_BITS  = { \323.B_AND_S [5], 2'h0 };
  assign \323.S [2:1] = { \323.B_AND_S [5], \323.B_AND_S [2] };
  assign \323.Y  = excrt2;
  assign \323.Y_B  = { \323.B_AND_S [5], \323.B_AND_S [2] };
  assign R[31:0] = { signr2_d2, expr_d1, fracr_d1 };
  assign computedr = { R[33:32], signr2_d2, expr_d1, fracr_d1 };
  assign effsubvector = { effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub, effsub };
  assign effsubvector_d1 = { effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1, effsub_d1 };
  assign excexpfracx = { X[33:32], X[30:0] };
  assign excexpfracy = { Y[33:32], Y[30:0] };
  assign excr = R[33:32];
  assign excx = newx[33:32];
  assign excy = newy[33:32];
  assign excy_d1 = sxsyexnxy_d1[1:0];
  assign exexpexc = { roundedexpfrac[33:32], excrt_d7 };
  assign expfrac = { updatedexp, \lzcandshifter:240 [26:3] };
  assign expr = roundedexpfrac[31:24];
  assign expx = newx[30:23];
  assign fracaddresult = \fracadder:235 ;
  assign fracr = roundedexpfrac[23:1];
  assign fracsticky = { \fracadder:235 , sticky_d1 };
  assign fracxpad = { newx[22:0], 2'h0 };
  assign fracypad = { 1'h0, \rightshiftercomponent:209  };
  assign fracypadxorop[26] = effsub_d1;
  assign lsb = \lzcandshifter:240 [4];
  assign \lzcandshifter:239  = nzerosnew;
  assign \lzcandshifter:240 [2:0] = shiftedfrac[2:0];
  assign newx[31] = signx;
  assign newy[31] = signy;
  assign \rightshiftercomponent:210  = sticky;
  assign rnd = \lzcandshifter:240 [3];
  assign \roundingadder:278  = roundedexpfrac;
  assign shiftedfrac[27:3] = \lzcandshifter:240 [27:3];
  assign shiftedfracy = \rightshiftercomponent:209 ;
  assign signy_d1 = sxsyexnxy_d1[4];
  assign sxsyexnxy = { signx, signy, newx[33:32], newy[33:32] };
  assign sxsyexnxy_d1[5] = signx_d1;
  assign upexc = roundedexpfrac[33:32];
endmodule
